@model PUPFMIS.Models.Item

@{
    ViewBag.Title = "Items";
    ViewBag.Description = "Add";
    Layout = "~/Views/Shared/_BodyLayout.cshtml";
}

@section BreadCrumb {
    <ol class="breadcrumb float-sm-right">
        <li class="breadcrumb-item"><a href="/"><i class="fa fa-dashboard"></i>@Html.ActionLink("PUP-FM Portal", "index", "Home")</a></li>
        <li class="breadcrumb-item">@Html.ActionLink("Items Master", "index")</li>
        <li class="breadcrumb-item">Add</li>
    </ol>
}

@section Header {
    <div class="col-md-12 text-right">
        <h1 class="card-title"><i class="fa fa-bookmark"></i> New Item</h1>
    </div>
}

@using (Html.BeginForm("create", "Items", FormMethod.Post, htmlAttributes: new { id = "addItem", enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
    <div class="row">
        <div class="col-sm-12">
            <div class="form-horizontal">
                <h4>Item Details</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="row">
                    <div class="col-lg-6 col-md-6 col-sm-12">
                        <div class="form-group">
                            @Html.LabelFor(model => model.ItemName, htmlAttributes: new { @class = "control-label" })
                            <div class="input-group mb-3">
                                <div class="input-group-prepend">
                                    <span class="input-group-text"><i class="fa fa-id-card"></i></span>
                                </div>
                                @Html.EditorFor(model => model.ItemName, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                            </div>
                            @Html.ValidationMessageFor(model => model.ItemName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-lg-6 col-md-6 col-sm-12">
                        <div class="form-group">
                            @Html.LabelFor(model => model.AccountClass,  htmlAttributes: new { @class = "control-label" })
                            <div class="input-group mb-3">
                                <div class="input-group-prepend">
                                    <span class="input-group-text"><i class="fa fa-bookmark"></i></span>
                                </div>
                                @Html.DropDownList("AccountClass", null, htmlAttributes: new { @class = "form-control form-control-sm" })
                            </div>
                            @Html.ValidationMessageFor(model => model.AccountClass, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-lg-6 col-md-6 col-sm-12">
                        <div class="form-group">
                            @Html.LabelFor(model => model.ItemShortSpecifications, htmlAttributes: new { @class = "control-label" })
                            <div class="input-group mb-3">
                                <div class="input-group-prepend">
                                    <span class="input-group-text"><i class="fa fa-asterisk"></i></span>
                                </div>
                                @Html.EditorFor(model => model.ItemShortSpecifications, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                            </div>
                            @Html.ValidationMessageFor(model => model.ItemShortSpecifications, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-lg-6 col-md-6 col-sm-12">
                        <div class="form-group">
                            @Html.LabelFor(model => model.ItemSpecifications, htmlAttributes: new { @class = "control-label" })
                            <div class="input-group mb-3">
                                <div class="input-group-prepend">
                                    <span class="input-group-text"><i class="fa fa-asterisk"></i></span>
                                </div>
                                @Html.EditorFor(model => model.ItemSpecifications, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                            </div>
                            @Html.ValidationMessageFor(model => model.ItemSpecifications, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-lg-6 col-md-6 col-sm-12">
                        <div class="form-group">
                            @Html.LabelFor(model => model.ItemImage, htmlAttributes: new { @class = "control-label" })
                            <div class="form-group mb-3">
                                <input type="file" id="Avatar" name="upload" />
                            </div>
                            @Html.ValidationMessageFor(model => model.ItemImage, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-lg-6 col-md-6 col-sm-12">
                        <div class="form-group">
                            @Html.LabelFor(model => model.ProcurementSource, htmlAttributes: new { @class = "control-label" })
                            <div class="input-group mb-3">
                                <div class="input-group-prepend">
                                    <span class="input-group-text"><i class="fa fa-building"></i></span>
                                </div>
                                @Html.EnumDropDownListFor(model => model.ProcurementSource, htmlAttributes: new { @class = "form-control form-control-sm" })
                            </div>
                            @Html.ValidationMessageFor(model => model.ProcurementSource, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-lg-6 col-md-6 col-sm-12">
                        <div class="form-group">
                            @Html.LabelFor(model => model.PackagingUOMReference, htmlAttributes: new { @class = "control-label" })
                            <div class="input-group mb-3">
                                <div class="input-group-prepend">
                                    <span class="input-group-text"><i class="fa fa-bookmark"></i></span>
                                </div>
                                @Html.DropDownList("PackagingUOMReference", null, htmlAttributes: new { @class = "form-control form-control-sm" })
                            </div>
                            @Html.ValidationMessageFor(model => model.PackagingUOMReference, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-lg-6 col-md-6 col-sm-12">
                        <div class="form-group">
                            @Html.LabelFor(model => model.InventoryTypeReference, htmlAttributes: new { @class = "control-label" })
                            <div class="input-group mb-3">
                                <div class="input-group-prepend">
                                    <span class="input-group-text"><i class="fa fa-book"></i></span>
                                </div>
                                @Html.DropDownList("InventoryTypeReference", null, htmlAttributes: new { @class = "form-control form-control-sm" })
                            </div>
                            @Html.ValidationMessageFor(model => model.InventoryTypeReference, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-lg-6 col-md-6 col-sm-12">
                        <div class="form-group">
                            @Html.LabelFor(model => model.IndividualUOMReference, htmlAttributes: new { @class = "control-label" })
                            <div class="input-group mb-3">
                                <div class="input-group-prepend">
                                    <span class="input-group-text"><i class="fa fa-bookmark"></i></span>
                                </div>
                                @Html.DropDownList("IndividualUOMReference", null, htmlAttributes: new { @class = "form-control form-control-sm" })
                            </div>
                            @Html.ValidationMessageFor(model => model.IndividualUOMReference, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-lg-6 col-md-6 col-sm-12">
                        <div class="form-group">
                            @Html.LabelFor(model => model.ItemCategoryReference, htmlAttributes: new { @class = "control-label" })
                            <div class="input-group mb-3">
                                <div class="input-group-prepend">
                                    <span class="input-group-text"><i class="fa fa-question"></i></span>
                                </div>
                                @Html.DropDownList("ItemCategoryReference", null, htmlAttributes: new { @class = "form-control form-control-sm" })
                            </div>
                            @Html.ValidationMessageFor(model => model.ItemCategoryReference, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-lg-6 col-md-6 col-sm-12">
                        <div class="form-group">
                            @Html.LabelFor(model => model.DistributionQtyPerPack, htmlAttributes: new { @class = "control-label" })
                            <div class="input-group mb-3">
                                <div class="input-group-prepend">
                                    <span class="input-group-text"><i class="fa fa-hashtag"></i></span>
                                </div>
                                @Html.EditorFor(model => model.DistributionQtyPerPack, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                            </div>
                            @Html.ValidationMessageFor(model => model.DistributionQtyPerPack, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-lg-6 col-md-6 col-sm-12">
                        <div class="form-group">
                            @Html.LabelFor(model => model.MinimumIssuanceQty, htmlAttributes: new { @class = "control-label" })
                            <div class="input-group mb-3">
                                <div class="input-group-prepend">
                                    <span class="input-group-text"><i class="fa fa-question"></i></span>
                                </div>
                                @Html.EditorFor(model => model.MinimumIssuanceQty, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                            </div>
                            @Html.ValidationMessageFor(model => model.MinimumIssuanceQty, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    
}

@section FormFooter {
    <div class="form-group float-right">
        <button type="button" class="btn btn-primary" id="save-btn" onclick='SaveItem()'><i class="fa fa-save"></i>&nbsp; Save changes</button>
        <button type="button" class="btn btn-danger" onclick="window.location = '@Url.Action("index","Items")'"><i class="fa fa-arrow-circle-left"></i> Back</button>
    </div>
}

<script src="~/Scripts/adminlte/components/jquery/dist/jquery.min.js"></script>
<script src="~/Scripts/adminlte/components/bootstrap-datepicker/dist/js/bootstrap-datepicker.js"></script>
<script type="text/javascript">
    function SaveItem() {
        swal.fire({
            title: "Save record?",
            text: "You are about to save this record, continue?",
            type: "warning",
            showCancelButton: true,
        }).then((result) => {
            if (result.value) {
                $("#addItem").submit();
            }
        })
    }
</script>
