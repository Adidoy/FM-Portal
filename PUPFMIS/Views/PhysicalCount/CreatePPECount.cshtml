@model IEnumerable<PUPFMIS.Models.PhysicalCountPPE>
@{ 
    PUPFMIS.Models.OfficesMaster offices = ViewData["Office"] as PUPFMIS.Models.OfficesMaster;
    PUPFMIS.Models.PhysicalCountPPE ppeCount = ViewData["PPECount"] as PUPFMIS.Models.PhysicalCountPPE;
}

<div class="row">
    <div class="col-lg-6 col-md-6 col-sm-12">
        <div class="form-group">
            @Html.Label("End-User", htmlAttributes: new { @class = "control-label" })
            <div class="input-group mb-3">
                <div class="input-group-prepend">
                    <span class="input-group-text"><i class="fa fa-user"></i></span>
                </div>
                @Html.DropDownList("EndUser", null, htmlAttributes: new { @class = "form-control form-control-sm" })
            </div>
        </div>
    </div>
    <div class="col-lg-6 col-md-6 col-sm-12">
        <div class="form-group">
            @Html.Label("Location", htmlAttributes: new { @class = "control-label" })
            <div class="input-group mb-3">
                <div class="input-group-prepend">
                    <span class="input-group-text"><i class="fa fa-building"></i></span>
                </div>
                @Html.DropDownList("Location", null, htmlAttributes: new { @class = "form-control form-control-sm" })
            </div>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-sm-12">
        <div class="card-body table-responsive p-sm-0">
            <table class="table table-striped table-hover" id="example2">
                <thead>
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model.FKPPEReference.PropertyNo)
                        </th>
                        <th width="25%">
                            PPE Information
                        </th>
                        <th width="10%">
                            Quantity per Property Card
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.UnitValue)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Condition)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.PhysicalStatus)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Remarks)
                        </th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>PUP-053004-0001-2019</td>
                        <td>
                            <b><i>CABINET, FILING</i></b>
                            <br />
                            <b>SPECIFICATIONS:</b>
                            <br />
                            <i>Specifications go here...</i>
                            <br />
                            <b>UNIT OF MEASURE: </b><i>PC</i>
                        </td>
                        <td>1</td>
                        <td>10,500.00</td>
                        <td>@Html.EnumDropDownListFor(m => ppeCount.Condition, htmlAttributes: new { @class = "form-control form-control-sm" })</td>
                        <td>@Html.EnumDropDownListFor(m => ppeCount.PhysicalStatus, htmlAttributes: new { @class = "form-control form-control-sm" })</td>
                        <td>@Html.Editor("Remarks", new { htmlAttributes = new { @class = "form-control form-control-sm" } })</td>
                    </tr>
                    @*@foreach (var item in Model)
                        {
                            <tr>
                                <td>
                                    @Html.DisplayFor(modelItem => item.FKCountReference.PhysicalInventoryNo)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.FKPPEReference.PropertyNo)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.UnitValue)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.OnHandPerCount)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.OverageShortage)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Remarks)
                                </td>
                                <td>
                                    @Html.ActionLink("Edit", "Edit", new { id = item.ID }) |
                                    @Html.ActionLink("Details", "Details", new { id = item.ID }) |
                                    @Html.ActionLink("Delete", "Delete", new { id = item.ID })
                                </td>
                            </tr>
                        }*@
                </tbody>
            </table>
        </div>
    </div>
</div>
