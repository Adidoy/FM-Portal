@model PUPFMIS.Models.PhysicalCount

@{
    ViewBag.Title = "Physical Count";
    ViewBag.Description = "Create";
    Layout = "~/Views/Shared/_BodyLayout.cshtml";
}

@section BreadCrumb {
    <ol class="breadcrumb float-sm-right">
        <li class="breadcrumb-item"><a href="/"><i class="fa fa-dashboard"></i>@Html.ActionLink("PUP-FM Portal", "index", "Home")</a></li>
        <li class="breadcrumb-item">@Html.ActionLink("Physical Count", "index")</li>
        <li class="breadcrumb-item">Create</li>
    </ol>
}

@section Header {
    <div class="col-md-12 text-right">
        <h1 class="card-title"><i class="fa fa-bookmark"></i> New Physical Count Record</h1>
    </div>
}

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Physical Count Details</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="row">
            <div class="col-lg-4 col-md-4 col-sm-12">
                <div class="form-group form-group-sm">
                    @Html.LabelFor(model => model.FundCluster, htmlAttributes: new { @class = "control-label" })
                    <div class="input-group mb-3">
                        <div class="input-group-prepend">
                            <span class="input-group-text"><i class="fa fa-object-group"></i></span>
                        </div>
                        @Html.EditorFor(model => model.FundCluster, new { htmlAttributes = new { @class = "form-control form-control-sm", style = "font-size: 100%;" } })
                    </div>
                    @Html.ValidationMessageFor(model => model.FundCluster, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-lg-4 col-md-4 col-sm-12">
                <div class="form-group">
                    @Html.LabelFor(model => model.DateOfCount, htmlAttributes: new { @class = "control-label" })
                    <div class="input-group mb-3">
                        <div class="input-group-prepend">
                            <span class="input-group-text"><i class="fa fa-calendar"></i></span>
                        </div>
                        @Html.EditorFor(model => model.DateOfCount, new { htmlAttributes = new { @class = "form-control form-control-sm", style = "font-size: 100%;" } })
                    </div>
                    @Html.ValidationMessageFor(model => model.DateOfCount, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-lg-4 col-md-4 col-sm-12">
                <div class="form-group">
                    @Html.LabelFor(model => model.Period, htmlAttributes: new { @class = "control-label" })
                    <div class="input-group mb-3">
                        <div class="input-group-prepend">
                            <span class="input-group-text"><i class="fa fa-calendar"></i></span>
                        </div>
                        @{ 
                            var period = new List<SelectListItem> {
                                //new SelectListItem { Text = "Mid-year", Value = "Mid-year" },
                                //new SelectListItem { Text = "Year-end", Value = "Year-end" },
                                new SelectListItem { Text = "1st Quarter", Value = "Q1" },
                                new SelectListItem { Text = "2nd Quarter", Value = "Q2" },
                                new SelectListItem { Text = "3rd Quarter", Value = "Q3" },
                                new SelectListItem { Text = "4th Quarter", Value = "Q4" }
                            };
                        }
                        @Html.DropDownListFor(model => model.Period, period, htmlAttributes: new { @class = "form-control form-control-sm", style = "font-size: 100%;" } )
                    </div>
                    @Html.ValidationMessageFor(model => model.Period, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>
    <br />
    if (ViewBag.Type == "supplies")
    {
        <h3 class="card-title">Supply Items</h3>
        <br />
        <hr />
        @Html.Partial("CreateSuppliesCount")
    }
    else if (ViewBag.Type == "properties")
    {
        <h3 class="card-title">Properties, Plant, Equipment</h3>
        <br />
        <hr />
        @Html.Partial("CreatePPECount")
    }
    @section FormFooter {
        <div class="form-group float-right">
            <button type="button" class="btn btn-primary" onclick="window.location = '@Url.Action("index", "PhysicalCount")'"><i class="fa fa-save"></i> Save Changes</button>
            <button type="button" class="btn btn-danger" onclick="window.location = '@Url.Action("index","PhysicalCount")'"><i class="fa fa-arrow-circle-left"></i> Back</button>
        </div>
    }
}

