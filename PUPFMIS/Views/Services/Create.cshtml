@model PUPFMIS.Models.Services

@{
    ViewBag.Title = "Services";
    ViewBag.Description = "Add";
    Layout = "~/Views/Shared/_BodyLayout.cshtml";
}

@section BreadCrumb {
    <ol class="breadcrumb float-sm-right">
        <li class="breadcrumb-item"><a href="/"><i class="fa fa-dashboard"></i>@Html.ActionLink("PUP-FM Portal", "index", "Home", new { Area = "" }, null)</a></li>
        <li class="breadcrumb-item">@Html.ActionLink("Services Master", "list", new { Area = "" }, null)</li>
        <li class="breadcrumb-item">Add</li>
    </ol>
}

@section Header {
    <div class="col-md-12 text-right">
        <h1 class="card-title"><i class="fa fa-bookmark"></i> New Service</h1>
    </div>
}

@using (Html.BeginForm("add-service", "Services", FormMethod.Post, htmlAttributes: new { id = "addItem", Area = "", enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="row">
        <div class="col-sm-12">
            <div class="form-horizontal">
                <h4>Service Details</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="row">
                    <div class="col-lg-6 col-md-6 col-sm-12">
                        <div class="form-group">
                            @Html.LabelFor(model => model.ServiceName, htmlAttributes: new { @class = "control-label" })
                            <div class="input-group mb-3">
                                <div class="input-group-prepend">
                                    <span class="input-group-text"><i class=" fa fa-id-badge"></i></span>
                                </div>
                                @Html.EditorFor(model => model.ServiceName, new { htmlAttributes = new { @class = "form-control form-control-sm", style = "font-size: 100%" } })
                            </div>
                            @Html.ValidationMessageFor(model => model.ServiceName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-lg-6 col-md-6 col-sm-12">
                        <div class="form-group">
                            @Html.LabelFor(model => model.ItemShortSpecifications, htmlAttributes: new { @class = "control-label" })
                            <div class="input-group mb-3">
                                <div class="input-group-prepend">
                                    <span class="input-group-text"><i class="fa fa-asterisk"></i></span>
                                </div>
                                @Html.EditorFor(model => model.ItemShortSpecifications, new { htmlAttributes = new { @class = "form-control form-control-sm", style = "font-size: 100%" } })
                            </div>
                            @Html.ValidationMessageFor(model => model.ItemShortSpecifications, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-lg-6 col-md-6 col-sm-12">
                        <div class="form-group">
                            @Html.LabelFor(model => model.ServiceTypeReference, htmlAttributes: new { @class = "control-label" })
                            <div class="input-group mb-3">
                                <div class="input-group-prepend">
                                    <span class="input-group-text"><i class="fa fa-book"></i></span>
                                </div>
                                @Html.DropDownList("ServiceTypeReference", null, htmlAttributes: new { @class = "form-control form-control-sm" })
                            </div>
                            @Html.ValidationMessageFor(model => model.ServiceTypeReference, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-lg-6 col-md-6 col-sm-12">
                        <div class="form-group">
                            @Html.LabelFor(model => model.ProcurementSource, htmlAttributes: new { @class = "control-label" })
                            <div class="input-group mb-3">
                                <div class="input-group-prepend">
                                    <span class="input-group-text"><i class="fa fa-building"></i></span>
                                </div>
                                @Html.EnumDropDownListFor(model => model.ProcurementSource, htmlAttributes: new { @class = "form-control form-control-sm", onchange = "GetCategories()" })
                            </div>
                            @Html.ValidationMessageFor(model => model.ProcurementSource, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-lg-6 col-md-6 col-sm-12">
                        <div class="form-group">
                            @Html.LabelFor(model => model.AccountClass, htmlAttributes: new { @class = "control-label" })
                            <div class="input-group mb-3">
                                <div class="input-group-prepend">
                                    <span class="input-group-text"><i class="fa fa-bookmark"></i></span>
                                </div>
                                @Html.DropDownList("AccountClass", null, htmlAttributes: new { @class = "form-control form-control-sm select2" })
                            </div>
                            @Html.ValidationMessageFor(model => model.AccountClass, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-lg-6 col-md-6 col-sm-12">
                        <div class="form-group">
                            @Html.LabelFor(model => model.ServiceCategoryReference, htmlAttributes: new { @class = "control-label" })
                            <div class="input-group mb-3">
                                <div class="input-group-prepend">
                                    <span class="input-group-text"><i class="fa fa-question"></i></span>
                                </div>
                                @Html.DropDownList("ServiceCategoryReference", null, htmlAttributes: new { @class = "form-control form-control-sm  select2" })
                            </div>
                            @Html.ValidationMessageFor(model => model.ServiceCategoryReference, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

            </div>
        </div>
    </div>
}

@section FormFooter {
    <div class="form-group float-right">
        <button type="button" class="btn btn-primary" id="save-btn" onclick="SaveService()"><i class="fa fa-save"></i>&nbsp; Save changes</button>
        <button type="button" class="btn btn-danger" onclick="window.location = '@Url.Action("list", "Services", new { Area = "" })'"><i class="fa fa-arrow-circle-left"></i> Back to List</button>
    </div>
}

<script src="~/Scripts/adminlte/components/jquery/dist/jquery.js"></script>
<script src="~/Scripts/adminlte/components/select2/js/select2.full.js"></script>
<script type="text/javascript">
    function SaveService() {
        swal.fire({
            title: "Save record?",
            text: "You are about to save this record, continue?",
            type: "warning",
            showCancelButton: true,
        }).then((result) => {
            if (result.value) {
                $("#addItem").submit();
            }
        })
    }
    function GetCategories() {
        var procurementSource = $('#ProcurementSource').val();
        var url = '@Url.Action("get-categories", "Services")';
        $.ajax({
            url: url,
            data: { ProcurementSource: procurementSource },
            type: "GET",
            success: function (data) {
                var s = '<option value="-1">Please Category</option>';
                for (var i = 0; i < data.length; i++) {
                    s += '<option value="' + data[i].ID + '">' + data[i].ItemCategoryName + '</option>';
                }
                $("#ServiceCategoryReference").html(s);
            }
        });
    }
</script>
<script>
    $.fn.select2.defaults.set( "theme", "bootstrap" );
    $(".select2").select2();
</script>