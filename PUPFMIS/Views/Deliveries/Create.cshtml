@model PUPFMIS.Models.DeliveryHeader

@{
    ViewBag.Title = "Deliveries Receipt";
    ViewBag.Description = "Create";
    Layout = "~/Views/Shared/_BodyLayout.cshtml";
    PUPFMIS.Models.PurchaseOrderHeader PurchaseOrderReference = new PUPFMIS.Models.PurchaseOrderHeader();
}

@section BreadCrumb {
    <ol class="breadcrumb float-sm-right">
        <li class="breadcrumb-item"><a href="/"><i class="fa fa-dashboard"></i>@Html.ActionLink("PUP-FM Portal", "index", "Home")</a></li>
        <li class="breadcrumb-item">@Html.ActionLink("Deliveries Receipt", "index")</li>
        <li class="breadcrumb-item">Create</li>
    </ol>
}

@section Header {
    <div class="col-md-12 text-right">
        <h1 class="card-title"><i class="fa fa-bookmark"></i> New Delivery</h1>
    </div>
}

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Purchase Order Details</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="row">
            <div class="col-lg-6 col-md-6 col-sm-12">
                <div class="form-group-sm">
                    @Html.Label("Reference", htmlAttributes: new { @class = "control-label" })
                    <br />
                    @{ 
                        var reference = new List<SelectListItem>() {
                            new SelectListItem { Text = "Agency Procurement Request", Value = "APR" },
                            new SelectListItem { Text = "Purchase Order", Value = "PO" }
                        };
                    }
                    <div class="input-group mb-3">
                        <div class="input-group-prepend">
                            <span class="input-group-text"><i class="fa fa-file"></i></span>
                        </div>
                        @Html.DropDownList("Reference", reference, htmlAttributes: new { @class = "form-control form-control-sm" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => PurchaseOrderReference.FKSupplier.SupplierName, htmlAttributes: new { @class = "control-label" })
                    <div class="input-group mb-3">
                        <div class="input-group-prepend">
                            <span class="input-group-text"><i class="fa fa-truck"></i></span>
                        </div>
                        @Html.EditorFor(m => PurchaseOrderReference.FKSupplier.SupplierName, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                    </div>
                </div>
            </div>
            <div class="col-lg-6 col-md-6 col-sm-12">
                <div class="form-group">
                    @Html.Label("Reference Number", htmlAttributes: new { @class = "control-label" })
                    <div class="input-group mb-3">
                        <div class="input-group-prepend">
                            <button class="btn btn-sm btn-primary" type="button" onclick="loadModal()"><i class="fa fa-search"></i></button>
                        </div>
                        @Html.EditorFor(m => PurchaseOrderReference.PONumber, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => PurchaseOrderReference.PODate, htmlAttributes: new { @class = "control-label" })
                    <div class="input-group mb-3">
                        <div class="input-group-prepend">
                            <span class="input-group-text"><i class="fa fa-truck"></i></span>
                        </div>
                        @Html.EditorFor(m => PurchaseOrderReference.PODate, new { htmlAttributes = new { @class = "form-control form-control-sm", Value = DateTime.Now.ToString("dd MMMM yyyy hh:mm tt") } })
                    </div>
                </div>
            </div>
        </div>
        <br />
        <h3 class="card-title">Delivery Details</h3>
        <br />
        <hr />
        <div class="row">
            <div class="col-lg-6 col-md-6 col-md-12">
                <div class="form-group">
                    @Html.LabelFor(model => model.InvoiceNumber, htmlAttributes: new { @class = "control-label" })
                    <div class="input-group mb-3">
                        <div class="input-group-prepend">
                            <span class="input-group-text"><i class="fa fa-file-invoice"></i></span>
                        </div>
                        @Html.EditorFor(model => model.InvoiceNumber, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                    </div>
                    @Html.ValidationMessageFor(model => model.InvoiceNumber, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.DRNumber, htmlAttributes: new { @class = "control-label" })
                    <div class="input-group mb-3">
                        <div class="input-group-prepend">
                            <span class="input-group-text"><i class="fa fa-truck-loading"></i></span>
                        </div>
                        @Html.EditorFor(model => model.DRNumber, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                    </div>
                    @Html.ValidationMessageFor(model => model.DRNumber, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.ProcessedBy, htmlAttributes: new { @class = "control-label" })
                    <div class="input-group mb-3">
                        <div class="input-group-prepend">
                            <span class="input-group-text"><i class="fa fa-user"></i></span>
                        </div>
                        @Html.EditorFor(model => model.ProcessedBy, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                    </div>
                    @Html.ValidationMessageFor(model => model.ProcessedBy, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-lg-6 col-md-6 col-md-12">
                <div class="form-group">
                    @Html.LabelFor(model => model.InvoiceDate, htmlAttributes: new { @class = "control-label" })
                    <div class="input-group mb-3">
                        <div class="input-group-prepend">
                            <span class="input-group-text"><i class="fa fa-calendar"></i></span>
                        </div>
                        @Html.EditorFor(model => model.InvoiceDate, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                    </div>
                    @Html.ValidationMessageFor(model => model.InvoiceDate, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.DeliveryDate, htmlAttributes: new { @class = "control-label" })
                    <div class="input-group mb-3">
                        <div class="input-group-prepend">
                            <span class="input-group-text"><i class="fa fa-calendar"></i></span>
                        </div>
                        @Html.EditorFor(model => model.DeliveryDate, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                    </div>
                    @Html.ValidationMessageFor(model => model.DeliveryDate, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.ReceivedBy, htmlAttributes: new { @class = "control-label" })
                    <div class="input-group mb-3">
                        <div class="input-group-prepend">
                            <span class="input-group-text"><i class="fa fa-user"></i></span>
                        </div>
                        @Html.EditorFor(model => model.ReceivedBy, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                    </div>
                    @Html.ValidationMessageFor(model => model.ReceivedBy, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>
    <br />
    <h3 class="card-title">Purchase Order Items</h3>
    <br />
    <hr />
    <div class="row">
        <div class="col-lg-12 col-md-12 col-sm-6">
            @Html.Partial("CreateDeliveryItems")
        </div>
    </div>
    @section FormFooter {
        <div class="form-group float-right">
            <button type="button" class="btn btn-primary" onclick="window.location = '@Url.Action("index", "Deliveries")'"><i class="fa fa-save"></i> Save Changes</button>
            <button type="button" class="btn btn-danger" onclick="window.location = '@Url.Action("index","Deliveries")'"><i class="fa fa-arrow-circle-left"></i> Back</button>
        </div>
    }
    }

<div class="modal fade" id="modal-default">
    <div class="modal-dialog modal-lg">
        <div class="modal-content" id="modal-container">
        </div>
    </div>
</div>

<script type="text/javascript">
    var options = { "backdrop": "static", keyboard: true };
    function loadModal() {
        ref = $('#Reference').val();
        url = '@Url.Action("getreferences","Deliveries")' + '/' + ref;
        $.ajax({
            type: "GET",
            url: url,
            contentType: "application/json; charset=utf-8",
            datatype: "json",
            success: function (data) {
                $('#modal-container').html(data);
                $('#modal-default').modal(options);
                $('#modal-default').modal('show');
            }
        });
    }
</script>