@model PUPFMIS.Models.InspectionHeader
@using PUPFMIS.Helpers
@{
    ViewBag.Title = "Inspection and Acceptance";
    ViewBag.Description = "Create";
    Layout = "~/Views/Shared/_BodyLayout.cshtml";
    PUPFMIS.Models.SupplyDelivery deliveryReference = ViewData["DeliveryDetails"] as PUPFMIS.Models.SupplyDelivery;
    PUPFMIS.Models.PurchaseOrderHeader PurchaseOrderReference = new PUPFMIS.Models.PurchaseOrderHeader();
}

@section BreadCrumb {
    <ol class="breadcrumb float-sm-right">
        <li class="breadcrumb-item"><a href="/"><i class="fa fa-dashboard"></i>@Html.ActionLink("PUP-FM Portal", "index", "Home")</a></li>
        <li class="breadcrumb-item">@Html.ActionLink("Inspection and Acceptnace", "index")</li>
        <li class="breadcrumb-item">Create</li>
    </ol>
}

@section Header {
    <div class="col-md-12 text-right">
        <h1 class="card-title"><i class="fa fa-bookmark"></i> New Inspection Report</h1>
    </div>
}

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Purchase Order Details</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="row">
            <div class="col-lg-6 col-md-6 col-sm-12">
                <div class="form-group-sm">
                    @Html.Label("Reference", htmlAttributes: new { @class = "control-label" })
                    <br />
                    @{
                        var reference = new List<SelectListItem>() {
                            new SelectListItem { Text = "Agency Procurement Request", Value = "APR" },
                            new SelectListItem { Text = "Purchase Order", Value = "PO" }
                        };
                    }
                    <div class="input-group mb-3">
                        <div class="input-group-prepend">
                            <span class="input-group-text"><i class="fa fa-file"></i></span>
                        </div>
                        @Html.DropDownList("Reference", reference, htmlAttributes: new { @class = "form-control form-control-sm" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => PurchaseOrderReference.FKSupplier.SupplierName, htmlAttributes: new { @class = "control-label" })
                    <div class="input-group mb-3">
                        <div class="input-group-prepend">
                            <span class="input-group-text"><i class="fa fa-truck"></i></span>
                        </div>
                        @Html.EditorFor(m => PurchaseOrderReference.FKSupplier.SupplierName, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                    </div>
                </div>
            </div>
            <div class="col-lg-6 col-md-6 col-sm-12">
                <div class="form-group">
                    @Html.Label("Reference Number", htmlAttributes: new { @class = "control-label" })
                    <div class="input-group mb-3">
                        <div class="input-group-prepend">
                            <button class="btn btn-sm btn-primary" type="button" onclick="loadModal()"><i class="fa fa-search"></i></button>
                        </div>
                        @Html.EditorFor(m => PurchaseOrderReference.PONumber, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => PurchaseOrderReference.PODate, htmlAttributes: new { @class = "control-label" })
                    <div class="input-group mb-3">
                        <div class="input-group-prepend">
                            <span class="input-group-text"><i class="fa fa-truck"></i></span>
                        </div>
                        @Html.EditorFor(m => PurchaseOrderReference.PODate, new { htmlAttributes = new { @class = "form-control form-control-sm", Value = DateTime.Now.ToString("dd MMMM yyyy hh:mm tt") } })
                    </div>
                </div>
            </div>
        </div>
        <br />
        <h3 class="card-title">Delivery Details</h3>
        <br />
        <hr />
        <div class="row">
            <div class="col-lg-6 col-md-6 col-md-12">
                <div class="form-group">
                    @Html.LabelFor(model => deliveryReference.FKDelivery.InvoiceNumber, htmlAttributes: new { @class = "control-label" })
                    <div class="input-group mb-3">
                        <div class="input-group-prepend">
                            <span class="input-group-text"><i class="fa fa-file-invoice"></i></span>
                        </div>
                        @Html.EditorFor(model => deliveryReference.FKDelivery.InvoiceNumber, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                    </div>
                    @Html.ValidationMessageFor(model => deliveryReference.FKDelivery.InvoiceNumber, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => deliveryReference.FKDelivery.DRNumber, htmlAttributes: new { @class = "control-label" })
                    <div class="input-group mb-3">
                        <div class="input-group-prepend">
                            <span class="input-group-text"><i class="fa fa-truck-loading"></i></span>
                        </div>
                        @Html.EditorFor(model => deliveryReference.FKDelivery.DRNumber, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                    </div>
                    @Html.ValidationMessageFor(model => deliveryReference.FKDelivery.DRNumber, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => deliveryReference.FKDelivery.ProcessedBy, htmlAttributes: new { @class = "control-label" })
                    <div class="input-group mb-3">
                        <div class="input-group-prepend">
                            <span class="input-group-text"><i class="fa fa-user"></i></span>
                        </div>
                        @Html.EditorFor(model => deliveryReference.FKDelivery.ProcessedBy, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                    </div>
                    @Html.ValidationMessageFor(model => deliveryReference.FKDelivery.ProcessedBy, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-lg-6 col-md-6 col-md-12">
                <div class="form-group">
                    @Html.LabelFor(model => deliveryReference.FKDelivery.InvoiceDate, htmlAttributes: new { @class = "control-label" })
                    <div class="input-group mb-3">
                        <div class="input-group-prepend">
                            <span class="input-group-text"><i class="fa fa-calendar"></i></span>
                        </div>
                        @Html.EditorFor(model => deliveryReference.FKDelivery.InvoiceDate, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                    </div>
                    @Html.ValidationMessageFor(model => deliveryReference.FKDelivery.InvoiceDate, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => deliveryReference.FKDelivery.DeliveryDate, htmlAttributes: new { @class = "control-label" })
                    <div class="input-group mb-3">
                        <div class="input-group-prepend">
                            <span class="input-group-text"><i class="fa fa-calendar"></i></span>
                        </div>
                        @Html.EditorFor(model => deliveryReference.FKDelivery.DeliveryDate, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                    </div>
                    @Html.ValidationMessageFor(model => deliveryReference.FKDelivery.DeliveryDate, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => deliveryReference.FKDelivery.ReceivedBy, htmlAttributes: new { @class = "control-label" })
                    <div class="input-group mb-3">
                        <div class="input-group-prepend">
                            <span class="input-group-text"><i class="fa fa-user"></i></span>
                        </div>
                        @Html.EditorFor(model => deliveryReference.FKDelivery.ReceivedBy, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                    </div>
                    @Html.ValidationMessageFor(model => deliveryReference.FKDelivery.ReceivedBy, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <br />
        <h3 class="card-title">Inspection Details</h3>
        <br />
        <hr />
        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.InspectionPersonnel, htmlAttributes: new { @class = "control-label" })
                    <div class="input-group md-3">
                        <div class="input-group-prepend">
                            <span class="input-group-text"><i class="fa fa-user"></i></span>
                        </div>
                        @Html.EditorFor(model => model.InspectionPersonnel, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                    </div>
                    @Html.ValidationMessageFor(model => model.InspectionPersonnel, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.InspectionDate, htmlAttributes: new { @class = "control-label" })
                    <div class="input-group mb-3">
                        <div class="input-group-prepend">
                            <span class="input-group-text"><i class="fa fa-calendar-alt"></i></span>
                        </div>
                        @Html.EditorFor(model => model.InspectionDate, new { htmlAttributes = new { @class = "form-control form-control-sm", disabled = "disabled", Value = DateTime.Now.ToString("dd MMMM yyyy hh:mmtt") } })
                    </div>
                    @Html.ValidationMessageFor(model => model.InspectionDate, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <br />
        <div class="row">
            <div class="col-sm-12">
                <table class="table table-striped table-hover display">
                    <thead>
                        <tr>
                            <th style="vertical-align:middle;" rowspan="2" width="26%">Item Specifications</th>
                            <th style="vertical-align:middle;" rowspan="2" width="20%">Classification</th>
                            <th style="vertical-align:middle; text-align:center" colspan="3">Quantity</th>
                            <th style="vertical-align:middle; text-align:center" rowspan="2" width="30%">Individual Remark</th>
                        </tr>
                        <tr>
                            <th style="vertical-align:middle; text-align:center" width="12%">Delivered</th>
                            <th style="vertical-align:middle; text-align:center" width="12%">Accepted</th>
                            <th style="vertical-align:middle; text-align:center" width="12%">Rejected</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td>INK CARTRIDGE</td>
                            <td>Common-use Supplies and Equipment</td>
                            <td align="center">1,000</td>
                            <td>
                                <div class="input-group mb-3">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text"><i class="fa fa-thumbs-up"></i></span>
                                    </div>
                                    @Html.Editor("QuantityPassed", new { htmlAttributes = new { @class = "form-control form-control-sm", type = "number", min = "0", Value = "0" } })
                                </div>
                            </td>
                            <td>
                                <div class="input-group mb-3">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text"><i class="fa fa-thumbs-down"></i></span>
                                    </div>
                                    @Html.Editor("QuantityFailed", new { htmlAttributes = new { @class = "form-control form-control-sm", type = "number", min = "0", Value = "0" } })
                                </div>
                            </td>

                            <td>
                                <div class="input-group mb-3">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text"><i class="fa fa-comment"></i></span>
                                    </div>
                                    @Html.Editor("IndividualRemark", new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                                </div>
                            </td>
                        </tr>
                        <tr>
                            <td>HARD DISK DRIVE, EXTERNAL</td>
                            <td>Semi-Expendable Equipment</td>
                            <td align="center">350</td>
                            <td>
                                <div class="input-group mb-3">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text"><i class="fa fa-thumbs-up"></i></span>
                                    </div>
                                    @Html.Editor("QuantityPassed", new { htmlAttributes = new { @class = "form-control form-control-sm", type = "number", min = "0", Value = "0" } })
                                </div>
                            </td>
                            <td>
                                <div class="input-group mb-3">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text"><i class="fa fa-thumbs-down"></i></span>
                                    </div>
                                    @Html.Editor("QuantityFailed", new { htmlAttributes = new { @class = "form-control form-control-sm", type = "number", min = "0", Value = "0" } })
                                </div>
                            </td>

                            <td>
                                <div class="input-group mb-3">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text"><i class="fa fa-comment"></i></span>
                                    </div>
                                    @Html.Editor("IndividualRemark", new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                                </div>
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>
        <br />
        <h3 class="card-title">Overall Remarks</h3>
        <br />
        <hr />
        <div class="row">
            <div class="col-sm-12">
                <div class="form-group">
                    @Html.EditorFor(model => model.OverallRemarks, new { htmlAttributes = new { @class = "form-control textarea form-control-sm" } })
                    @Html.ValidationMessageFor(model => model.OverallRemarks, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>

    @section FormFooter {
        <div class="form-group float-right">
            <button type="button" class="btn btn-primary" onclick="window.location = '@Url.Action("index", "Inspections")'"><i class="fa fa-save"></i> Save Changes</button>
            <button type="button" class="btn btn-danger" onclick="window.location = '@Url.Action("index","Inspections")'"><i class="fa fa-arrow-circle-left"></i> Back</button>
        </div>
    }
}


