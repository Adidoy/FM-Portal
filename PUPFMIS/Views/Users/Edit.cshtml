@model PUPFMIS.Models.UsersVM

<div class="modal-header">
    <h4 class="modal-title">Register New User</h4>
    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
        <span aria-hidden="true">&times;</span>
    </button>
</div>

@using (Ajax.BeginForm("update", "Users", new AjaxOptions() { HttpMethod = "POST", UpdateTargetId = "modal-container", OnSuccess = "CreateResult" }, htmlAttributes: new { id = "addUser", Area = "" }))
{
    <div class="modal-body" id="form-body">
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(d => d.UserID)

        <div class="form-group">
            @Html.Label("Department", htmlAttributes: new { @class = "control-label" })
            <div class="input-group mb-3">
                <div class="input-group-prepend">
                    <span class="input-group-text"><i class="fa fa-building"></i></span>
                </div>
                @Html.EditorFor(model => model.Department, new { htmlAttributes = new { @class = "form-control form-control-sm", style = "font-size:100%;", disabled = "disabled" } })
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Employee Name", htmlAttributes: new { @class = "control-label" })
            <div class="input-group mb-3">
                <div class="input-group-prepend">
                    <span class="input-group-text"><i class="fa fa-user"></i></span>
                </div>
                @Html.EditorFor(model => model.Employee, new { htmlAttributes = new { @class = "form-control form-control-sm", style = "font-size:100%;", disabled = "disabled" } })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Designation, htmlAttributes: new { @class = "control-label" })
            <div class="input-group mb-3">
                <div class="input-group-prepend">
                    <span class="input-group-text"><i class="fa fa-book"></i></span>
                </div>
                @Html.EditorFor(model => model.Designation, new { htmlAttributes = new { id = "Designation", @class = "form-control form-control-sm", style = "font-size:100%;", disabled = "disabled" } })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label" })
            <div class="input-group mb-3">
                <div class="input-group-prepend">
                    <span class="input-group-text"><i class="fa fa-at"></i></span>
                </div>
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { id = "Email", @class = "form-control form-control-sm", style = "font-size:100%;", disabled = "disabled" } })
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Focus Unit", htmlAttributes: new { @class = "control-label" })
            <div class="input-group mb-3">
                <div class="input-group-prepend">
                    <span class="input-group-text"><i class="fa fa-building"></i></span>
                </div>
                @Html.DropDownList("UnitCode", null, htmlAttributes: new { @class = "form-control form-control-sm select2", style = "font-size:100%" })
            </div>
        </div>
        <div class="form-group">
            @Html.Label("System Role", htmlAttributes: new { @class = "control-label" })
            <div class="input-group mb-3">
                <div class="input-group-prepend">
                    <span class="input-group-text"><i class="fa fa-user-cog"></i></span>
                </div>
                @Html.DropDownList("UserRole", null, htmlAttributes: new { @class = "form-control form-control-sm", style = "font-size:100%" })
            </div>
        </div>

    </div>
}

<div class="modal-footer">
    <div class="form-group">
        <button type="button" class="btn btn-primary" onclick="Save()"><i class="fa fa-save"></i>&nbsp; Save changes</button>
        <button type="button" class="btn btn-danger" data-dismiss="modal"><i class="fa fa-times-circle"></i>&nbsp; Close</button>
    </div>
</div>

<script type="text/javascript">
    function Save() {
        swal.fire({
            title: "Save record?",
            text: "You are about to update the User Account Record, continue?",
            icon: "question",
            showCancelButton: true,
        }).then((result) => {
            if (result.value) {
                $("#addUser").submit();
            }
            else {
                swal.fire({
                    title: "Cancelled!",
                    text: "You have cancelled saving the record.",
                    icon: "error"
                })
            }
        })
    }
    function CreateResult(data) {
        if (data.result == true) {
            swal.fire({
                title: "Record Saved!",
                text: "User Account is successfully updated!",
                icon: "success"
            }).then((result) => {
                if (result.value) {
                    window.location.href = "@Url.Action("users-management", "Users", new { Area = "" })";
                }
            })
        }
        else {
            swal.fire({
                title: "Record Not Saved!",
                text: "Saving record failed.",
                icon: "error"
            })
        }
    }
</script>