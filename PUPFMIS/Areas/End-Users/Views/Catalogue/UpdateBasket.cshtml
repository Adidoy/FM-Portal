@model PUPFMIS.Models.CatalogueBasketItemVM

@{
    ViewBag.Title = "Update Basket Item";
    ViewBag.Description = "End-User Projects";
    Layout = "~/Views/Shared/_BodyLayout.cshtml";
}

@section BreadCrumb {
    <ol class="breadcrumb float-sm-right">
        <li class="breadcrumb-item"><a href="/"><i class="fa fa-dashboard"></i>@Html.ActionLink("PUP-FM Portal", "index", "Home")</a></li>
        <li class="breadcrumb-item">@Html.ActionLink("Dashboard", "dashboard", "ProjectPlans", new { area = "end-users" }, null)</li>
        <li class="breadcrumb-item">Update Basket Item</li>
    </ol>
}

@section Header {
    <div class="col-md-12 text-right">
        <h1 class="card-title"><i class="fa fa-bookmark"></i> @Model.ItemName <small>(@Model.ItemCode)</small></h1>
    </div>
}

@using (Html.BeginForm("add-to-basket", "Catalogue", FormMethod.Post, new { Area = "end-users" }))
{
    @Html.AntiForgeryToken()
    if (!Html.ViewData.ModelState.IsValid)
    {
        <div class="row">
            <div class="col-sm-12">
                <div class="alert alert-danger">
                    <h6><i class="icon fas fa-ban"></i> Alert!</h6>
                    @Html.ValidationSummary(true, "", new { style = "font-size: 12pt;" })
                </div>
            </div>
        </div>
    }
    <div class="row">
        <div class="col-sm-12">
            <div class="row">
                <div class="col-sm-3">
                    <div class="form-group-sm">
                        <div class="mt-3" style="text-align:center; vertical-align: middle;" id="itemImageHolder">
                            @Html.HiddenFor(model => model.ItemImage)
                            @if (Model.ItemImage != null)
                            {
                                var base64 = Convert.ToBase64String(Model.ItemImage);
                                var imgsrc = string.Format("data:image/jpg;base64,{0}", base64);
                                <img src='@imgsrc' style="max-width:175px; max-height:175px;" />
                            }
                            else
                            {
                                <img src="@Url.Content("~/Content/imgs/PUPLogo.png")" style="max-width:175px; max-height:175px;" />
                            }
                        </div>
                    </div>
                </div>
                <div class="col-sm-9">
                    <div class="row">
                        <div class="col-sm-12">
                            @Html.HiddenFor(model => model.ItemCode)
                            @Html.HiddenFor(model => model.ItemName)
                            <h3>@Model.ItemName.ToString() <span><small><b>(@Model.ItemCode)</b></small></span></h3>
                            <hr />
                            <h5>ITEM SPECIFICATIONS:</h5>
                            @Html.HiddenFor(model => model.ItemSpecifications)
                            <p style="text-align:justify; font-size:11pt;">@Model.ItemSpecifications</p>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-12">
                            <div class="row">
                                <div class="col-lg-3 col-md-3 col-sm-12" style="font-size: 10pt;">
                                    <b>Procurement Source :</b>
                                </div>
                                <div class="col-lg-9 col-md-9 col-sm-12" style="font-size: 10pt;">
                                    @Html.HiddenFor(model => model.ProcurementSource)
                                    @( Model.ProcurementSource == PUPFMIS.Models.ProcurementSources.PS_DBM ? "DBM Procurement Store" : "Private Suppliers" )
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-lg-3 col-md-3 col-sm-12" style="font-size: 10pt;">
                                    <b>Category :</b>
                                </div>
                                <div class="col-lg-9 col-md-9 col-sm-12" style="font-size: 10pt;">
                                    @Html.HiddenFor(model => model.ItemCategory)
                                    @Html.DisplayFor(model => model.ItemCategory)
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-lg-3 col-md-3 col-sm-12" style="font-size: 10pt;">
                                    <b>Inventory Type :</b>
                                </div>
                                <div class="col-lg-9 col-md-9 col-sm-12" style="font-size: 10pt;">
                                    @Html.HiddenFor(model => model.InventoryType)
                                    @Html.DisplayFor(model => model.InventoryType)
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-lg-3 col-md-3 col-sm-12" style="font-size: 10pt;">
                                    <b>Unit of Measure :</b>
                                </div>
                                <div class="col-lg-9 col-md-9 col-sm-12" style="font-size: 10pt;">
                                    @if (Model.IndividualUOMReference == null)
                                    {
                                        <span>Not Applicable</span>
                                    }
                                    else
                                    {
                                        @Html.HiddenFor(model => model.IndividualUOMReference)
                                        @Html.DisplayFor(model => model.IndividualUOMReference)
                                    }
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-lg-3 col-md-3 col-sm-12" style="font-size: 10pt;">
                                    <b>Minimum Issuance Qty :</b>
                                </div>
                                <div class="col-lg-9 col-md-9 col-sm-12" style="font-size: 10pt;">
                                    @if (Model.MinimumIssuanceQty == 0)
                                    {
                                        <span>Not Applicable</span>
                                    }
                                    else
                                    {
                                        @Html.HiddenFor(model => model.MinimumIssuanceQty)
                                        @Html.DisplayFor(model => model.MinimumIssuanceQty)<span>&nbsp;</span>@Html.DisplayFor(model => model.IndividualUOMReference)
                                    }
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-lg-3 col-md-3 col-sm-12" style="font-size: 10pt;">
                                    <b>Unit Cost :</b>
                                </div>
                                <div class="col-lg-9 col-md-9 col-sm-12" style="font-size: 10pt;">
                                    @if (Model.UnitCost == null || Model.UnitCost == 0)
                                    {
                                        <span>Not Applicable</span>
                                    }
                                    else
                                    {
                                        @Html.HiddenFor(model => model.UnitCost)
                                        @( string.Format("{0:C}", Model.UnitCost) )
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                    <hr />
                    <div class="row">
                        <div class="col-lg-3 col-md-3 col-sm-12">
                            <h6 style="color:black;">Quantity Requirement</h6>
                        </div>
                        <div class="col-lg-3 col-md-3 col-sm-12">
                            <div class="form-group">
                                <div class="input-group">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text"><i class="fa fa-hashtag"></i></span>
                                    </div>
                                    @if (ViewBag.EnableElement == true)
                                    {
                                        @Html.EditorFor(model => model.TotalQty, new { htmlAttributes = new { @class = "form-control form-control-sm", style = "font-size:100%;" } })
                                    }
                                    else
                                    {
                                        @Html.HiddenFor(model => model.TotalQty)
                                        @Html.EditorFor(model => model.TotalQty, new { htmlAttributes = new { @class = "form-control form-control-sm", style = "font-size:100%;", disabled = "disabled" } })
                                    }
                                </div>
                                @Html.ValidationMessageFor(model => model.TotalQty, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-sm-12">
            <div class="form-group">
                @Html.Label("Justification", htmlAttributes: new { @class = "control-label" })
                <div class="input-group input-group-sm mb-3">
                    <div class="input-group-prepend">
                        <span class="input-group-text"><i class="fa fa-paragraph"></i></span>
                    </div>
                    @if (ViewBag.EnableElement == true)
                    {
                        @Html.EditorFor(m => m.Remarks, new { htmlAttributes = new { @class = "form-control form-control-sm", placeholder = "Enter the justification here...", style = "font-size: 100%; height: 75px", type = "number" } })
                    }
                    else
                    {
                        @Html.HiddenFor(m => m.Remarks)
                        @Html.EditorFor(m => m.Remarks, new { htmlAttributes = new { @class = "form-control form-control-sm", placeholder = "Enter the justification here...", style = "font-size: 100%; height: 75px", type = "number", disabled = "disabled" } })
                    }
                </div>
                @Html.ValidationMessageFor(model => model.Remarks, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <br />
    @Html.HiddenFor(m => m.ProposalType)
    if (Model.InventoryType != "Common Use Office Supplies")
    {
        <h4>Supplier Information</h4>
            <hr />
            <div class="row">
                <div class="col-sm-12">
                    <div class="card card-info card-outline">
                        <div class="card-header">
                            <h3 class="card-title">SUPPLIER INFORMATION:</h3>
                        </div>
                        <div class="card-header d-flex p-0">
                            <ul class="nav nav-pills p-2">
                                <li class="nav-item"><a class="nav-link active" href="#supplier1" data-toggle="tab"><i class="fa fa-truck"></i>&nbsp; Supplier 1</a></li>
                                <li class="nav-item"><a class="nav-link" href="#supplier2" data-toggle="tab"><i class="fa fa-truck"></i>&nbsp; Supplier 2</a></li>
                                <li class="nav-item"><a class="nav-link" href="#supplier3" data-toggle="tab"><i class="fa fa-truck"></i>&nbsp; Supplier 3</a></li>
                            </ul>
                        </div>
                        <div class="tab-content">
                            <div class="tab-pane active" id="supplier1">
                                <div class="card-body">
                                    <div class="row">
                                        <div class="col-sm-6">
                                            <div class="form-group-sm">
                                                @Html.LabelFor(model => model.Supplier1Name, htmlAttributes: new { @class = "control-label" })
                                                <div class="input-group input-group-sm mb-3">
                                                    <div class="input-group-prepend">
                                                        <button type="button" class="btn btn-sm btn-primary" onclick="loadSupplier('@Url.Action("view-suppliers","Catalogue", new { Area = "end-users", SupplierNo = 1 })')"><i class="fa fa-search"></i></button>
                                                    </div>
                                                    @Html.HiddenFor(m => m.Supplier1ID, htmlAttributes: new { id = "supplierID" })
                                                    @Html.HiddenFor(m => m.Supplier1Name)
                                                    @Html.EditorFor(m => m.Supplier1Name, new { htmlAttributes = new { id = "supplierName", @class = "form-control form-control-sm", style = "font-size: 100", disabled = "disabled" } })
                                                </div>
                                                @Html.ValidationMessageFor(model => model.Supplier1Name, "", new { @class = "text-danger" })
                                            </div>
                                            <div class="form-group-sm">
                                                @Html.LabelFor(model => model.Supplier1Address, htmlAttributes: new { @class = "control-label" })
                                                <div class="input-group input-group-sm mb-3">
                                                    <div class="input-group-prepend">
                                                        <span class="input-group-text"><i class="fa fa-building"></i></span>
                                                    </div>
                                                    @Html.HiddenFor(m => m.Supplier1Address)
                                                    @Html.EditorFor(m => m.Supplier1Address, new { htmlAttributes = new { id = "supplierAddress", @class = "form-control form-control-sm", style = "font-size: 100", disabled = "disabled" } })
                                                </div>
                                                @Html.ValidationMessageFor(model => model.Supplier1Address, "", new { @class = "text-danger" })
                                            </div>
                                            <div class="form-group-sm">
                                                @Html.LabelFor(model => model.Supplier1ContactNo, htmlAttributes: new { @class = "control-label" })
                                                <div class="input-group input-group-sm mb-3">
                                                    <div class="input-group-prepend">
                                                        <span class="input-group-text"><i class="fa fa-phone"></i></span>
                                                    </div>
                                                    @Html.HiddenFor(m => m.Supplier1ContactNo)
                                                    @Html.EditorFor(m => m.Supplier1ContactNo, new { htmlAttributes = new { id = "supplierContact", @class = "form-control form-control-sm", style = "font-size: 100", disabled = "disabled" } })
                                                </div>
                                                @Html.ValidationMessageFor(model => model.Supplier1ContactNo, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="col-sm-6">
                                            <div class="form-group-sm">
                                                @Html.LabelFor(model => model.Supplier1EmailAddress, htmlAttributes: new { @class = "control-label" })
                                                <div class="input-group input-group-sm mb-3">
                                                    <div class="input-group-prepend">
                                                        <span class="input-group-text"><i class="fa fa-at"></i></span>
                                                    </div>
                                                    @Html.HiddenFor(m => m.Supplier1EmailAddress)
                                                    @Html.EditorFor(m => m.Supplier1EmailAddress, new { htmlAttributes = new { id = "supplierEmail", @class = "form-control form-control-sm", style = "font-size: 100", disabled = "disabled" } })
                                                </div>
                                                @Html.ValidationMessageFor(model => model.Supplier1EmailAddress, "", new { @class = "text-danger" })
                                            </div>
                                            <div class="form-group-sm">
                                                @Html.LabelFor(model => model.Supplier1UnitCost, htmlAttributes: new { @class = "control-label" })
                                                <div class="input-group input-group-sm mb-3">
                                                    <div class="input-group-prepend">
                                                        <span class="input-group-text"><i class="fa fa-coins"></i></span>
                                                    </div>
                                                    @Html.HiddenFor(m => m.Supplier1UnitCost)
                                                    @Html.EditorFor(m => m.Supplier1UnitCost, new { htmlAttributes = new { @class = "form-control form-control-sm", style = "font-size: 100%;", type = "number" } })
                                                </div>
                                                @Html.ValidationMessageFor(model => model.Supplier1UnitCost, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="tab-pane" id="supplier2">
                                <div class="card-body">
                                    <div class="row">
                                        <div class="col-sm-6">
                                            <div class="form-group-sm">
                                                @Html.LabelFor(model => model.Supplier2Name, htmlAttributes: new { @class = "control-label" })
                                                <div class="input-group input-group-sm mb-3">
                                                    <div class="input-group-prepend">
                                                        <button type="button" class="btn btn-sm btn-primary" onclick="loadSupplier('@Url.Action("view-suppliers","Catalogue", new { Area = "end-users", SupplierNo = 2 })')"><i class="fa fa-search"></i></button>
                                                    </div>
                                                    @Html.HiddenFor(m => m.Supplier2ID, htmlAttributes: new { id = "supplier2ID" })
                                                    @Html.HiddenFor(m => m.Supplier2Name)
                                                    @Html.EditorFor(m => m.Supplier2Name, new { htmlAttributes = new { id = "supplier2Name", @class = "form-control form-control-sm", style = "font-size: 100", disabled = "disabled" } })
                                                </div>
                                                @Html.ValidationMessageFor(model => model.Supplier2Name, "", new { @class = "text-danger" })
                                            </div>
                                            <div class="form-group-sm">
                                                @Html.LabelFor(model => model.Supplier2Address, htmlAttributes: new { @class = "control-label" })
                                                <div class="input-group input-group-sm mb-3">
                                                    <div class="input-group-prepend">
                                                        <span class="input-group-text"><i class="fa fa-building"></i></span>
                                                    </div>
                                                    @Html.HiddenFor(m => m.Supplier2Address)
                                                    @Html.EditorFor(m => m.Supplier2Address, new { htmlAttributes = new { id = "supplier2Address", @class = "form-control form-control-sm", style = "font-size: 100", disabled = "disabled" } })
                                                </div>
                                                @Html.ValidationMessageFor(model => model.Supplier2Address, "", new { @class = "text-danger" })
                                            </div>
                                            <div class="form-group-sm">
                                                @Html.LabelFor(model => model.Supplier2ContactNo, htmlAttributes: new { @class = "control-label" })
                                                <div class="input-group input-group-sm mb-3">
                                                    <div class="input-group-prepend">
                                                        <span class="input-group-text"><i class="fa fa-phone"></i></span>
                                                    </div>
                                                    @Html.HiddenFor(m => m.Supplier2ContactNo)
                                                    @Html.EditorFor(m => m.Supplier2ContactNo, new { htmlAttributes = new { id = "supplier2Contact", @class = "form-control form-control-sm", style = "font-size: 100", disabled = "disabled" } })
                                                </div>
                                                @Html.ValidationMessageFor(model => model.Supplier2ContactNo, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="col-sm-6">
                                            <div class="form-group-sm">
                                                @Html.LabelFor(model => model.Supplier2EmailAddress, htmlAttributes: new { @class = "control-label" })
                                                <div class="input-group input-group-sm mb-3">
                                                    <div class="input-group-prepend">
                                                        <span class="input-group-text"><i class="fa fa-at"></i></span>
                                                    </div>
                                                    @Html.HiddenFor(m => m.Supplier2EmailAddress)
                                                    @Html.EditorFor(m => m.Supplier2EmailAddress, new { htmlAttributes = new { id = "supplier2Email", @class = "form-control form-control-sm", style = "font-size: 100", disabled = "disabled" } })
                                                </div>
                                                @Html.ValidationMessageFor(model => model.Supplier2EmailAddress, "", new { @class = "text-danger" })
                                            </div>
                                            <div class="form-group-sm">
                                                @Html.LabelFor(model => model.Supplier2UnitCost, htmlAttributes: new { @class = "control-label" })
                                                <div class="input-group input-group-sm mb-3">
                                                    <div class="input-group-prepend">
                                                        <span class="input-group-text"><i class="fa fa-coins"></i></span>
                                                    </div>
                                                    @Html.HiddenFor(m => m.Supplier2UnitCost)
                                                    @Html.EditorFor(m => m.Supplier2UnitCost, new { htmlAttributes = new { @class = "form-control form-control-sm", style = "font-size: 100%;", type = "number" } })
                                                </div>
                                                @Html.ValidationMessageFor(model => model.Supplier2UnitCost, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="tab-pane" id="supplier3">
                                <div class="card-body">
                                    <div class="row">
                                        <div class="col-sm-6">
                                            <div class="form-group-sm">
                                                @Html.LabelFor(model => model.Supplier3Name, htmlAttributes: new { @class = "control-label" })
                                                <div class="input-group input-group-sm mb-3">
                                                    <div class="input-group-prepend">
                                                        <button type="button" class="btn btn-sm btn-primary" onclick="loadSupplier('@Url.Action("view-suppliers","Catalogue", new { Area = "end-users", SupplierNo = 3 })')"><i class="fa fa-search"></i></button>
                                                    </div>
                                                    @Html.HiddenFor(m => m.Supplier3ID, htmlAttributes: new { id = "supplier3ID" })
                                                    @Html.HiddenFor(m => m.Supplier3Name)
                                                    @Html.EditorFor(m => m.Supplier3Name, new { htmlAttributes = new { id = "supplier3Name", @class = "form-control form-control-sm", style = "font-size: 100", disabled = "disabled" } })
                                                </div>
                                                @Html.ValidationMessageFor(model => model.Supplier3Name, "", new { @class = "text-danger" })
                                            </div>
                                            <div class="form-group-sm">
                                                @Html.LabelFor(model => model.Supplier3Address, htmlAttributes: new { @class = "control-label" })
                                                <div class="input-group input-group-sm mb-3">
                                                    <div class="input-group-prepend">
                                                        <span class="input-group-text"><i class="fa fa-building"></i></span>
                                                    </div>
                                                    @Html.HiddenFor(m => m.Supplier3Address)
                                                    @Html.EditorFor(m => m.Supplier3Address, new { htmlAttributes = new { id = "supplier3Address", @class = "form-control form-control-sm", style = "font-size: 100", disabled = "disabled" } })
                                                </div>
                                                @Html.ValidationMessageFor(model => model.Supplier3Address, "", new { @class = "text-danger" })
                                            </div>
                                            <div class="form-group-sm">
                                                @Html.LabelFor(model => model.Supplier3ContactNo, htmlAttributes: new { @class = "control-label" })
                                                <div class="input-group input-group-sm mb-3">
                                                    <div class="input-group-prepend">
                                                        <span class="input-group-text"><i class="fa fa-phone"></i></span>
                                                    </div>
                                                    @Html.HiddenFor(m => m.Supplier3ContactNo)
                                                    @Html.EditorFor(m => m.Supplier3ContactNo, new { htmlAttributes = new { id = "supplier3Contact", @class = "form-control form-control-sm", style = "font-size: 100", disabled = "disabled" } })
                                                </div>
                                                @Html.ValidationMessageFor(model => model.Supplier3ContactNo, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="col-sm-6">
                                            <div class="form-group-sm">
                                                @Html.LabelFor(model => model.Supplier3EmailAddress, htmlAttributes: new { @class = "control-label" })
                                                <div class="input-group input-group-sm mb-3">
                                                    <div class="input-group-prepend">
                                                        <span class="input-group-text"><i class="fa fa-at"></i></span>
                                                    </div>
                                                    @Html.HiddenFor(m => m.Supplier3EmailAddress)
                                                    @Html.EditorFor(m => m.Supplier3EmailAddress, new { htmlAttributes = new { id = "supplier3Email", @class = "form-control form-control-sm", style = "font-size: 100", disabled = "disabled" } })
                                                </div>
                                                @Html.ValidationMessageFor(model => model.Supplier3EmailAddress, "", new { @class = "text-danger" })
                                            </div>
                                            <div class="form-group-sm">
                                                @Html.LabelFor(model => model.Supplier3UnitCost, htmlAttributes: new { @class = "control-label" })
                                                <div class="input-group input-group-sm mb-3">
                                                    <div class="input-group-prepend">
                                                        <span class="input-group-text"><i class="fa fa-coins"></i></span>
                                                    </div>
                                                    @Html.HiddenFor(m => m.Supplier3UnitCost)
                                                    @Html.EditorFor(m => m.Supplier3UnitCost, new { htmlAttributes = new { @class = "form-control form-control-sm", style = "font-size: 100%;", type = "number" } })
                                                </div>
                                                @Html.ValidationMessageFor(model => model.Supplier3UnitCost, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
    }
    <div class="row">
        <div class="col-sm-12">
            <div style="text-align: right;">
                <button type="submit" class="btn btn-md btn-primary"> <i class="fa fa-edit"></i> Update Basket Item</button>
                <button type="button" class="btn btn-md btn-danger" onclick="window.location = '@Url.Action("view-item-catalogue", "Catalogue", new { Area = "end-users" })'"> <i class="fa fa-arrow-circle-left"></i> Back to Catalogue</button>
            </div>
        </div>
    </div>
}

<div class="modal" id="modal-default">
    <div class="modal-dialog modal-dialog-centered modal-xl">
        <div class="modal-content" id="modal-container">
        </div>
    </div>
</div>

<script type="text/javascript">
    var options = { "backdrop": "static", keyboard: true };
    function loadSupplier(url) {
        $.ajax({
            type: "GET",
            url: url,
            contentType: "application/json; charset=utf-8",
            datatype: "json",
            success: function (data) {
                $('#modal-container').html(data);
                $('#modal-default').modal(options);
                $('#modal-default').modal('show');
            }
        });
    };
</script>