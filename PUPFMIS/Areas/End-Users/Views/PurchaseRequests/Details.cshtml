@model PUPFMIS.Models.ProcurementProjectsVM

@{
    ViewBag.Title = "Purchase Request";
    ViewBag.Description = "Items";
    Layout = "~/Views/Shared/_BodyLayout.cshtml";
}

@section BreadCrumb {
    <ol class="breadcrumb float-sm-right">
        <li class="breadcrumb-item"><a href="/"><i class="fa fa-dashboard"></i>@Html.ActionLink("PUP-FM Portal", "index", "Home")</a></li>
        <li class="breadcrumb-item">@Html.ActionLink("Procurement Programs", "create", "PurchaseRequests", new { Area = "end-users" }, null)</li>
        <li class="breadcrumb-item">Details</li>
    </ol>
}

@section Header {
    <h3 class="card-title"><i class="fa fa-bookmark"></i> @Model.PAPCode - @Model.ProcurementProgram</h3>
}

@using (Ajax.BeginForm("details", "PurchaseRequests", new AjaxOptions() { HttpMethod = "POST", OnSuccess = "CreateResult" }, htmlAttributes: new { id = "details", Area = "end-user" }))
{
    @Html.AntiForgeryToken()
    <div class="row">
        <div class="col-sm-12">
            <div class="bg-info">
                <h6 class="p-2">PROCUREMENT PROGRAM DETAILS</h6>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-sm-12">
            <div class="row">
                <div class="col-lg-6 col-md-6 col-sm-12">
                    <div class="form-group">
                        @Html.LabelFor(model => model.PAPCode, htmlAttributes: new { @class = "control-label" })
                        <div class="input-group mb-3">
                            <div class="input-group-prepend">
                                <span class="input-group-text"><i class="fa fa-id-card"></i></span>
                            </div>
                            @Html.EditorFor(model => model.PAPCode, new { htmlAttributes = new { @class = "form-control form-control-sm", disabled = "disabled" } })
                        </div>
                        @Html.ValidationMessageFor(model => model.PAPCode, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-lg-6 col-md-6 col-sm-12">
                    <div class="form-group">
                        @Html.LabelFor(model => model.ProcurementProgram, htmlAttributes: new { @class = "control-label" })
                        <div class="input-group mb-3">
                            <div class="input-group-prepend">
                                <span class="input-group-text"><i class="fa fa-bookmark"></i></span>
                            </div>
                            @Html.EditorFor(model => model.ProcurementProgram, new { htmlAttributes = new { @class = "form-control form-control-sm", disabled = "disabled" } })
                        </div>
                        @Html.ValidationMessageFor(model => model.ProcurementProgram, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-6 col-md-6 col-sm-12">
                    <div class="form-group">
                        @Html.LabelFor(model => model.ObjectClassification, htmlAttributes: new { @class = "control-label" })
                        <div class="input-group mb-3">
                            <div class="input-group-prepend">
                                <span class="input-group-text"><i class="fa fa-book-open"></i></span>
                            </div>
                            @Html.EditorFor(model => model.ObjectClassification, new { htmlAttributes = new { @class = "form-control form-control-sm", disabled = "disabled" } })
                        </div>
                        @Html.ValidationMessageFor(model => model.ObjectClassification, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-lg-6 col-md-6 col-sm-12">
                    <div class="form-group">
                        @Html.LabelFor(model => model.FundSource, htmlAttributes: new { @class = "control-label" })
                        <div class="input-group mb-3">
                            <div class="input-group-prepend">
                                <span class="input-group-text"><i class="fa fa-book-dead"></i></span>
                            </div>
                            @Html.HiddenFor(d => d.FundCluster)
                            @Html.EditorFor(model => model.FundSource, new { htmlAttributes = new { @class = "form-control form-control-sm", disabled = "disabled" } })
                        </div>
                        @Html.ValidationMessageFor(model => model.ProcurementProgram, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-6 col-md-6 col-sm-12">
                    <div class="form-group">
                        @Html.LabelFor(model => model.ProjectCoordinator, htmlAttributes: new { @class = "control-label" })
                        <div class="input-group mb-3">
                            <div class="input-group-prepend">
                                <span class="input-group-text"><i class="fa fa-user"></i></span>
                            </div>
                            @Html.EditorFor(model => model.ProjectCoordinator, new { htmlAttributes = new { @class = "form-control form-control-sm", disabled = "disabled" } })
                        </div>
                        @Html.ValidationMessageFor(model => model.ProjectCoordinator, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-lg-6 col-md-6 col-sm-12">
                    <div class="form-group">
                        @Html.LabelFor(model => model.ProjectSupport, htmlAttributes: new { @class = "control-label" })
                        <div class="input-group mb-3">
                            <div class="input-group-prepend">
                                <span class="input-group-text"><i class="fa fa-user-alt"></i></span>
                            </div>
                            @Html.EditorFor(model => model.ProjectSupport, new { htmlAttributes = new { @class = "form-control form-control-sm", disabled = "disabled" } })
                        </div>
                        @Html.ValidationMessageFor(model => model.ProjectSupport, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
    </div>
    <hr />
    <div class="row">
        <div class="col-sm-12">
            <div class="bg-info">
                <h6 class="p-2">PROJECT ITEMS</h6>
            </div>
        </div>
        <div class="col-sm-12">
            <div class="row">
                <div class="col-sm-12">
                    <div class="card-body table-responsive p-sm-0">
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-sm-12">
            <table class="table table-striped table-hover" id="example2">
                <thead>
                    <tr>
                        <th style="text-align:center; vertical-align:middle;" width="35%">Project Details</th>
                        <th style="text-align:center; vertical-align:middle;" width="65%">Item Details</th>
                    </tr>
                </thead>
                <tbody>
                    @{ var i = 0; }
                    @foreach (var item in Model.Items)
                    {
                        <tr>
                            <td style="text-align:justify; vertical-align:top;">
                                @Html.HiddenFor(d => Model.Items[i].ProjectCode)
                                @Html.HiddenFor(d => Model.Items[i].ProjectName)
                                <div class="row">
                                    <div class="col-sm-3">
                                        <b>@Html.DisplayNameFor(d => item.ProjectCode)</b>
                                    </div>
                                    <div class="col-sm-9">
                                        : @Html.DisplayFor(d => item.ProjectCode)
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-sm-3">
                                        <b>@Html.DisplayNameFor(d => item.ProjectName)</b>
                                    </div>
                                    <div class="col-sm-9">
                                        : @Html.DisplayFor(d => item.ProjectName)
                                    </div>
                                </div>
                            </td>
                            <td style="text-align:justify; vertical-align:middle;">
                                @Html.HiddenFor(d => Model.Items[i].ItemCode)
                                @Html.HiddenFor(d => Model.Items[i].ItemName)
                                @Html.HiddenFor(d => Model.Items[i].ItemSpecifications)
                                @Html.HiddenFor(d => Model.Items[i].ProcurementSource)
                                @Html.HiddenFor(d => Model.Items[i].InventoryType)
                                @Html.HiddenFor(d => Model.Items[i].ItemCategory)
                                @Html.HiddenFor(d => Model.Items[i].IndividualUOMReference)
                                @Html.HiddenFor(d => Model.Items[i].UnitCost)
                                @Html.HiddenFor(d => Model.Items[i].TotalQty)
                                @Html.HiddenFor(d => Model.Items[i].EstimatedBudget)
                                @Html.HiddenFor(d => Model.Items[i].DeliveryMonth)
                                <div class="row">
                                    <div class="col-sm-3">
                                        <b>@Html.DisplayNameFor(d => item.ItemCode)</b>
                                    </div>
                                    <div class="col-sm-9">
                                        : @Html.DisplayFor(d => item.ItemCode)
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-sm-3">
                                        <b>@Html.DisplayNameFor(d => item.ItemName)</b>
                                    </div>
                                    <div class="col-sm-9">
                                        : @Html.DisplayFor(d => item.ItemName)
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-sm-3">
                                        <b>@Html.DisplayNameFor(d => item.ItemSpecifications)</b>
                                    </div>
                                    <div class="col-sm-9">
                                        : @Html.DisplayFor(d => item.ItemSpecifications)
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-sm-3">
                                        <b>@Html.DisplayNameFor(d => item.ProcurementSource)</b>
                                    </div>
                                    <div class="col-sm-9">
                                        : @Html.DisplayFor(d => item.ProcurementSource)
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-sm-3">
                                        <b>@Html.DisplayNameFor(d => item.InventoryType)</b>
                                    </div>
                                    <div class="col-sm-9">
                                        : @Html.DisplayFor(d => item.InventoryType)
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-sm-3">
                                        <b>@Html.DisplayNameFor(d => item.ItemCategory)</b>
                                    </div>
                                    <div class="col-sm-9">
                                        : @Html.DisplayFor(d => item.ItemCategory)
                                    </div>
                                </div>
                                @if (item.IndividualUOMReference != null)
                                {
                                    <div class="row">
                                        <div class="col-sm-3">
                                            <b>@Html.DisplayNameFor(d => item.IndividualUOMReference)</b>
                                        </div>
                                        <div class="col-sm-9">
                                            : @Html.DisplayFor(d => item.IndividualUOMReference)
                                        </div>
                                    </div>
                                }
                                <div class="row">
                                    <div class="col-sm-3">
                                        <b>@Html.DisplayNameFor(d => item.UnitCost)</b>
                                    </div>
                                    <div class="col-sm-9">
                                        : @( item.UnitCost.ToString("C", new System.Globalization.CultureInfo("en-ph")) )
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-sm-3">
                                        <b>@Html.DisplayNameFor(d => item.TotalQty)</b>
                                    </div>
                                    <div class="col-sm-9">
                                        : @Html.DisplayFor(d => item.TotalQty)
                                        @if (item.IndividualUOMReference != null)
                                        {
                                            @Html.DisplayFor(d => item.IndividualUOMReference)
                                        }
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-sm-3">
                                        <b>@Html.DisplayNameFor(d => item.EstimatedBudget)</b>
                                    </div>
                                    <div class="col-sm-9">
                                        : @( item.EstimatedBudget.ToString("C", new System.Globalization.CultureInfo("en-ph")) )
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-sm-3">
                                        <b>@Html.DisplayNameFor(d => item.DeliveryMonth)</b>
                                    </div>
                                    <div class="col-sm-9">
                                        : @Html.DisplayFor(d => item.DeliveryMonth)
                                    </div>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
}

@section FormFooter {
    <div class="row">
        <div class="col-sm-12 text-right">
            <div class="form-group">
                <button type="button" class="btn btn-primary" onclick="OpenSubmission()"><i class="fa fa-save"></i>&nbsp; Post Purchase Request</button>
                <button type="button" class="btn btn-danger" onclick="window.location = '@Url.Action("create", "PurchaseRequests", new { Area = "end-users" })'"><i class="fa fa-arrow-alt-circle-left"></i>&nbsp; Back to Procurement Programs</button>
            </div>
        </div>
    </div>
}

<script type="text/javascript">
    function OpenSubmission() {
        swal.fire({
            title: "Post Purchase Request?",
            text: "You are about to post this Purchase Request, continue?",
            type: "warning",
            showCancelButton: true,
        }).then((result) => {
            if (result.value) {
                $("#details").submit();
            }
            else {
                swal.fire({
                    title: "Cancelled!",
                    text: "You have cancelled saving the record.",
                    type: "error"
                })
            };
        })
    }
    function CreateResult(data) {
        if (data.result == true) {
            swal.fire({
                title: "Purchase Request Saved!",
                html: "<p>Purchase Request is successfully posted!</p><p style = 'font-size: 10pt; text-align: justify;'><b>REMINDER:</b> Duly signed copy of Purchase Request must be forwarded to the Procurement Management Office.</p>",
                type: "success"
            }).then((result) => {
                if (result.value) {
                    window.location.href = "@Url.Action("create", "PurchaseRequests", new { Area = "end-users" })";
                }
            })
        }
        else {
            swal.fire({
                title: "Record Not Saved!",
                text: "Saving record failed.",
                type: "error"
            });
        }
    }
</script>