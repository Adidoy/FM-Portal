@model List<PUPFMIS.Models.APPLineItemVM>

@if(!ViewBag.IsCSEAvailable)
{
    <div class="row">
        <div class="col-sm-12">
            <div class="alert alert-danger text-center">
                <h6 class="m-0 p-0">NOTE: APP-CSE is not yet created. Please remind concerned personnel/office to create APP-CSE.</h6>
            </div>
        </div>
    </div>
    <br />
}
<div id="accordion">
    @for (int index = 0; index < Model.Count; index++)
    {
        <div class="card">
            <div class="card-header" id="@( string.Concat("heading_", Model[index].UACS.Replace(" ", "").ToString()) )">
                <h5 class="mb-0">
                    <button type="button" class="btn btn-link collapsed" data-toggle="collapse" data-target="@( string.Concat("#collapse_", Model[index].UACS.Replace(" ", "").ToString()) )" aria-expanded="false" aria-controls="collapse_@(Model[index].UACS.Replace(" ", "").ToString())">
                        <b>@( Convert.ToChar(index + 65).ToString() + ". " + Model[index].ObjectClassification.ToUpper() )</b>
                    </button>
                </h5>
            </div>
            <div id="@( string.Concat("collapse_", Model[index].UACS.Replace(" ", "").ToString()) )" class="collapse" aria-labelledby="@( string.Concat("heading_", Model[index].UACS.Replace(" ", "").ToString()) )" data-parent="#accordion">
                <div class="card-body">
                    <div id="accordion-details_@(index)">
                        @for (int i = 0; i < Model[index].ApprovedItems.Count; i++)
                        {
                            <div class="card card-info">
                                <div class="card-header p-0" id="@( string.Concat("heading_", Model[index].UACS.Replace(" ", "").ToString(), "_", Model[index].ApprovedItems[i].InventoryCode.Replace(" ", "").ToString(), Convert.ToChar(index + 65).ToString(), (i + 1).ToString()) )">
                                    <button type="button" class="btn btn-link collapsed" style="text-align:justify;" data-toggle="collapse" data-target="@( string.Concat("#collapse_", Model[index].ApprovedItems[i].InventoryCode.Replace(" ", "").ToString(), Convert.ToChar(index + 65).ToString(), (i + 1).ToString()) )" aria-expanded="false" aria-controls="@( string.Concat("collapse_", Model[index].ApprovedItems[i].InventoryCode.Replace(" ", "").ToString(), Convert.ToChar(index + 65).ToString(), (i + 1).ToString()) )">
                                        <b><span style="color:white;">@( (i + 1) + ". " + Model[index].ApprovedItems[i].ItemName.ToUpper() )</span></b>
                                    </button>
                                </div>
                                <div id="@( string.Concat("collapse_", Model[index].ApprovedItems[i].InventoryCode.Replace(" ", "").ToString(), Convert.ToChar(index + 65).ToString(), (i + 1).ToString()) )" class="collapse" aria-labelledby="@( string.Concat("heading_", Model[index].ApprovedItems[i].InventoryCode.Replace(" ", "").ToString(), Convert.ToChar(index + 65).ToString(), (i + 1).ToString()) )" data-parent="#accordion-details_@(index)">
                                    <div class="card-body">
                                        @Html.HiddenFor(d => Model[index].ApprovedItems[i].UACS)
                                        @Html.HiddenFor(d => Model[index].ApprovedItems[i].InventoryCode)
                                        @Html.HiddenFor(d => Model[index].ApprovedItems[i].ObjectClassification)
                                        @Html.HiddenFor(d => Model[index].ApprovedItems[i].UACSSubClass)
                                        @Html.HiddenFor(d => Model[index].ApprovedItems[i].PAPCode, htmlAttributes: new { Value = Model[index].ApprovedItems[i].InventoryCode + "-" + Convert.ToChar(index + 65).ToString() + (i + 1).ToString() })
                                        @Html.HiddenFor(d => Model[index].ApprovedItems[i].ItemName)
                                        @Html.HiddenFor(d => Model[index].ApprovedItems[i].ProcurementSource)
                                        @Html.HiddenFor(d => Model[index].ApprovedItems[i].ClassificationReference)
                                        <div class="row">
                                            <div class="col-sm-12">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => Model[index].ApprovedItems[i].EndUserName, htmlAttributes: new { @class = "control-label" })
                                                    <div class="input-group">
                                                        <div class="input-group-prepend">
                                                            <span class="input-group-text"><i class="fa fa-user"></i></span>
                                                        </div>
                                                        @Html.HiddenFor(d => Model[index].ApprovedItems[i].EndUser)
                                                        @Html.EditorFor(model => Model[index].ApprovedItems[i].EndUserName, new { htmlAttributes = new { @class = "form-control form-control-sm", style = "font-size:100%;", disabled = "disabled" } })
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-lg-7 col-md-7 col-sm-12">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => Model[index].ApprovedItems[i].Schedule, htmlAttributes: new { @class = "control-label" })
                                                    <div class="input-group">
                                                        <div class="input-group-prepend">
                                                            <span class="input-group-text"><i class="fa fa-calendar"></i></span>
                                                        </div>
                                                        @Html.HiddenFor(d => Model[index].ApprovedItems[i].Month)
                                                        @Html.EditorFor(model => Model[index].ApprovedItems[i].Schedule, new { htmlAttributes = new { @class = "form-control form-control-sm", style = "font-size:100%;", disabled = "disabled" } })
                                                    </div>
                                                </div>
                                                <div class="row">
                                                    <div class="col lg-6 col-md-6 col-sm-12">
                                                        <div class="form-group">
                                                            @Html.LabelFor(model => Model[index].ApprovedItems[i].MOOE, htmlAttributes: new { @class = "control-label" })
                                                            <div class="input-group">
                                                                <div class="input-group-prepend">
                                                                    <span class="input-group-text"><i class="fa fa-money-bill"></i></span>
                                                                </div>
                                                                @Html.HiddenFor(d => Model[index].ApprovedItems[i].MOOE)
                                                                @Html.EditorFor(model => Model[index].ApprovedItems[i].MOOE, new { htmlAttributes = new { @class = "form-control form-control-sm", style = "font-size:100%; text-align:right;", Value = Model[index].ApprovedItems[i].MOOE.ToString("C", new System.Globalization.CultureInfo("en-ph")), disabled = "disabled" } })
                                                            </div>
                                                        </div>
                                                        <div class="form-group">
                                                            @Html.LabelFor(model => Model[index].ApprovedItems[i].CapitalOutlay, htmlAttributes: new { @class = "control-label" })
                                                            <div class="input-group">
                                                                <div class="input-group-prepend">
                                                                    <span class="input-group-text"><i class="fa fa-money-bill"></i></span>
                                                                </div>
                                                                @Html.HiddenFor(d => Model[index].ApprovedItems[i].CapitalOutlay)
                                                                @Html.EditorFor(model => Model[index].ApprovedItems[i].CapitalOutlay, new { htmlAttributes = new { @class = "form-control form-control-sm", style = "font-size:100%; text-align:right;", Value = Model[index].ApprovedItems[i].CapitalOutlay.ToString("C", new System.Globalization.CultureInfo("en-ph")), disabled = "disabled" } })
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="col lg-6 col-md-6 col-sm-12">
                                                        <div class="form-group">
                                                            @Html.LabelFor(model => Model[index].ApprovedItems[i].FundSource, htmlAttributes: new { @class = "control-label" })
                                                            <div class="input-group">
                                                                <div class="input-group-prepend">
                                                                    <span class="input-group-text"><i class="fa fa-book"></i></span>
                                                                </div>
                                                                @Html.HiddenFor(d => Model[index].ApprovedItems[i].FundSource)
                                                                @Html.EditorFor(model => Model[index].ApprovedItems[i].FundDescription, new { htmlAttributes = new { @class = "form-control form-control-sm", style = "font-size:100%;", disabled = "disabled" } })
                                                            </div>
                                                        </div>
                                                        <div class="form-group">
                                                            @Html.LabelFor(model => Model[index].ApprovedItems[i].EstimatedBudget, htmlAttributes: new { @class = "control-label" })
                                                            <div class="input-group">
                                                                <div class="input-group-prepend">
                                                                    <span class="input-group-text"><i class="fa fa-money-bill"></i></span>
                                                                </div>
                                                                @Html.HiddenFor(d => Model[index].ApprovedItems[i].EstimatedBudget)
                                                                @Html.EditorFor(model => Model[index].ApprovedItems[i].EstimatedBudget, new { htmlAttributes = new { @class = "form-control form-control-sm", style = "font-size:100%; text-align:right;", Value = Model[index].ApprovedItems[i].EstimatedBudget.ToString("C", new System.Globalization.CultureInfo("en-ph")), disabled = "disabled" } })
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-lg-5 col-md-5 col-sm-12">
                                                <div class="form-group">
                                                    @{
                                                        var modes = new SelectList(ViewBag.ModesOfProcurement, "ID", "ModeOfProcurementName").ToList();
                                                        if (Model[index].ApprovedItems[i].ModeOfProcurement != null)
                                                        {
                                                            var selected = new SelectList(ViewBag.ModesOfProcurement, "ID", "ModeOfProcurementName").ToList();
                                                            foreach (var mode in Model[index].ApprovedItems[i].ModeOfProcurement)
                                                            {
                                                                selected.Where(d => d.Value == mode).FirstOrDefault().Selected = true;
                                                            }
                                                            modes = selected;
                                                        }
                                                    }
                                                    @Html.LabelFor(model => Model[index].ApprovedItems[i].ModeOfProcurement, htmlAttributes: new { @class = "control-label" })
                                                    @Html.DropDownListFor(d => Model[index].ApprovedItems[i].ModeOfProcurement, modes as List<SelectListItem>, htmlAttributes: new { @class = "form-control form-control-sm select2", style = "font-size:90%; width:100%", multiple = "multiple" })
                                                    @Html.ValidationMessageFor(model => Model[index].ApprovedItems[i].ModeOfProcurement, "", new { @class = "text-danger" })
                                                </div>
                                                <div class="form-group">
                                                    @Html.LabelFor(d => Model[index].ApprovedItems[i].Remarks, htmlAttributes: new { @class = "control-label" })
                                                    @Html.TextAreaFor(d => Model[index].ApprovedItems[i].Remarks, htmlAttributes: new { @class = "form-control form-control-sm", style = "resize:none; overflow:auto; text-align: justify;", rows = "5", placeholer = "Remarks" })
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    }
</div>