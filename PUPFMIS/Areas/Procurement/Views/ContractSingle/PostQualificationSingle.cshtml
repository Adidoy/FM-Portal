@model PUPFMIS.Models.NoticeOfAwardSetupVM

@{
    ViewBag.Title = "Procurement";
    ViewBag.Description = "Contract Details";
    Layout = "~/Views/Shared/_BodyLayout.cshtml";
}

@section BreadCrumb {
    <ol class="breadcrumb float-sm-right">
        <li class="breadcrumb-item"><a href="/"><i class="fa fa-tachometer-alt"></i>&nbsp;@Html.ActionLink("PUP-FM Portal", "index", "Home", new { Area = "" }, null)</a></li>
        <li class="breadcrumb-item">@Html.ActionLink("Procurement Projects", "dashboard", "Dashboard", new { Area = "end-users" }, null)</li>
        <li class="breadcrumb-item">Details</li>
    </ol>
}

@section Header {
    <h3 class="card-title" style="font-size:15pt;"><i class="fa fa-bookmark"></i> @Model.ContractName <small>(@Model.ContractCode)</small></h3>
}


@using (Ajax.BeginForm(Model.ProcurementProjectStage.ToString(), "ContractSingle", null, new AjaxOptions() { HttpMethod = "POST", OnSuccess = "CreateResult", UpdateTargetId = "form-container" }, htmlAttributes: new { id = "projectDetails", Area = "procurement" }))
{
    @Html.AntiForgeryToken()
    <div class="row">
        <div class="col-sm-12 col-md-7 col-lg-7 order-2 order-md-2">
            <div class="row">
                <div class="col-sm-12">
                    <div class="card">
                        <div class="card-header"><h5 class="card-title text-primary"><i class="fas fa-file-contract"></i> <b>Other Details</b></h5></div>
                        <div class="card-body">
                            <div class="row">
                                <div class="col-12">
                                    <div class="info-box">
                                        <span class="info-box-icon bg-info elevation-1"><i class="fas fa-coins"></i></span>
                                        <div class="info-box-content">
                                            <span class="info-box-text text-muted pb-1" style="font-size:11pt; font-weight:bold;">@Html.DisplayNameFor(model => model.ApprovedBudgetForContract)</span>
                                            <span class="info-box-number text-primary mb-0" style="font-size:16pt;">@( Model.ApprovedBudgetForContract.ToString("C", new System.Globalization.CultureInfo("en-ph")) )</span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-12">
                                    <div class="info-box">
                                        <span class="info-box-icon bg-info elevation-1"><i class="fas fa-lightbulb"></i></span>
                                        <div class="info-box-content">
                                            <span class="info-box-text text-muted pb-1" style="font-size:11pt; font-weight:bold;">@Html.DisplayNameFor(model => model.ContractStatus)</span>
                                            <span class="info-box-number text-primary mb-0" style="font-size:16pt;">@( Model.ContractStatus.GetAttribute<System.ComponentModel.DataAnnotations.DisplayAttribute>().Name )</span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-12">
                                    <div class="info-box">
                                        <span class="info-box-icon bg-info elevation-1"><i class="fas fa-comment"></i></span>
                                        <div class="info-box-content">
                                            <span class="info-box-text text-muted pb-1" style="font-size:11pt; font-weight:bold;">@Html.DisplayNameFor(model => model.ProcurementProjectStage)</span>
                                            <span class="info-box-number text-primary mb-0" style="font-size:16pt;">@( Model.ProcurementProjectStage.GetAttribute<System.ComponentModel.DataAnnotations.DisplayAttribute>().Name )</span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-sm-12">
                    <div class="card">
                        <div class="card-header"><h3 class="card-title text-primary"><i class="fa fa-file"></i> <b>Project Files</b></h3></div>
                        <div class="card-body">
                            <div class="row mb-2">
                                <div class="col-sm-12">
                                    @if (Model.ProcurementProjectStage >= PUPFMIS.Models.ProcurementProjectStages.PreProcurementConferenceSetup)
                                    {
                                        <a href="@Url.Action("print-preprocurement-memo", "ContractSingle", new { Area = "procurement", ContractCode = Model.ContractCode })" target="_blank" class="btn-link text-primary" style="font-size:12pt; font-weight:bold"><i class="far fa-fw fa-file-pdf" style="font-size:14pt;"></i>&nbsp;Memorandum of Pre-Procurement Conference</a>
                                    }
                                    else
                                    {
                                        <b class="d-block text-gray" style="font-size:12pt;"><i class="far fa-fw fa-file-pdf" style="font-size:14pt;"></i>&nbsp;Memorandum of Pre-Procurement Conference</b>
                                    }
                                </div>
                            </div>
                            <div class="row mb-2">
                                <div class="col-sm-12">
                                    @if (Model.ProcurementProjectType == PUPFMIS.Models.ProcurementProjectTypes.CPB)
                                    {
                                        if (Model.ProcurementProjectStage >= PUPFMIS.Models.ProcurementProjectStages.PreBidConferenceSetup)
                                        {
                                            <a href="@Url.Action("print-invitation-to-bid", "ContractSingle", new { Area = "procurement", ContractCode = Model.ContractCode })" target="_blank" class="btn-link text-primary" style="font-size:12pt; font-weight:bold"><i class="far fa-fw fa-file-pdf" style="font-size:14pt;"></i>&nbsp;Invitation To Bid</a>
                                        }
                                        else
                                        {
                                            <b class="d-block text-gray" style="font-size:12pt;"><i class="far fa-fw fa-file-pdf" style="font-size:14pt;"></i>&nbsp;Invitation To Bid</b>
                                        }
                                    }
                                    else
                                    {
                                        if (Model.ProcurementProjectStage >= PUPFMIS.Models.ProcurementProjectStages.PreBidConferenceSetup)
                                        {
                                            <a href="@Url.Action("print", "RequestForQuotation", new { Area = "procurement", ContractCode = Model.ContractCode })" target="_blank" class="btn-link text-primary" style="font-size:12pt; font-weight:bold"><i class="far fa-fw fa-file-pdf" style="font-size:14pt;"></i>>&nbsp;Request for Quotation</a>
                                        }
                                        else
                                        {
                                            <b class="d-block text-gray" style="font-size:12pt;"><i class="far fa-fw fa-file-pdf" style="font-size:14pt;"></i>&nbsp;Request for Quotation</b>
                                        }
                                    }
                                </div>
                            </div>
                            <div class="row mb-2">
                                <div class="col-sm-12">
                                    @if (Model.ProcurementProjectStage >= PUPFMIS.Models.ProcurementProjectStages.NoticeOfAwardSetup)
                                    {
                                        <a href="@Url.Action("print-notice-of-award", "ContractSingle", new { Area = "procurement", ContractCode = Model.ContractCode })" target="_blank" class="btn-link text-primary" style="font-size:12pt; font-weight:bold"><i class="far fa-fw fa-file-pdf" style="font-size:14pt;"></i>&nbsp;Notice of Award</a>
                                    }
                                    else
                                    {
                                        <b class="d-block text-gray" style="font-size:12pt;"><i class="far fa-fw fa-file-pdf" style="font-size:14pt;"></i>&nbsp;Notice of Award</b>
                                    }
                                </div>
                            </div>
                            @if (Model.Classification.Contains("Goods"))
                            {
                                <div class="row mb-2">
                                    <div class="col-sm-12">
                                        @if (Model.ProcurementProjectStage >= PUPFMIS.Models.ProcurementProjectStages.NoticeOfAwardSetup)
                                        {
                                            <a href="@Url.Action("print-contract-agreement-form", "ContractSingle", new { Area = "procurement", ContractCode = Model.ContractCode })" target="_blank" class="btn-link text-primary" style="font-size:12pt; font-weight:bold"><i class="far fa-fw fa-file-pdf" style="font-size:14pt;"></i>&nbsp;Contract Agreement Form</a>
                                        }
                                        else
                                        {
                                            <b class="d-block text-gray" style="font-size:12pt;"><i class="far fa-fw fa-file-pdf" style="font-size:14pt;"></i>&nbsp;Contract Agreement Form</b>
                                        }
                                    </div>
                                </div>
                                <div class="row mb-2">
                                    <div class="col-sm-12">
                                        @if (Model.ProcurementProjectStage >= PUPFMIS.Models.ProcurementProjectStages.NoticeOfAwardSetup)
                                        {
                                            <a href="@Url.Action("print-purchase-order", "ContractSingle", new { Area = "procurement", ContractCode = Model.ContractCode })" target="_blank" class="btn-link text-primary" style="font-size:12pt; font-weight:bold"><i class="far fa-fw fa-file-pdf" style="font-size:14pt;"></i>&nbsp;Purchase Order</a>
                                        }
                                        else
                                        {
                                            <b class="d-block text-gray" style="font-size:12pt;"><i class="far fa-fw fa-file-pdf" style="font-size:14pt;"></i>&nbsp;Purchase Order</b>
                                        }
                                    </div>
                                </div>
                            }
                            <div class="row mb-2">
                                <div class="col-sm-12">
                                    @if (Model.ProcurementProjectStage >= PUPFMIS.Models.ProcurementProjectStages.NoticeToProceedSetup)
                                    {
                                        <a href="@Url.Action("print-notice-to-proceed", "ContractSingle", new { Area = "procurement", ContractCode = Model.ContractCode })" target="_blank" class="btn-link text-primary" style="font-size:12pt; font-weight:bold"><i class="far fa-fw fa-file-pdf" style="font-size:14pt;"></i>&nbsp;Notice To Proceed</a>
                                    }
                                    else
                                    {
                                        <b class="d-block text-gray" style="font-size:12pt;"><i class="far fa-fw fa-file-pdf" style="font-size:14pt;"></i>&nbsp;Notice To Proceed</b>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-sm-12 col-md-5 col-lg-5 order-1 order-md-1">
            <div class="card">
                <div class="card-header"><h5 class="card-title text-primary"><i class="fas fa-file-contract"></i> <b>Contract Details</b></h5></div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-sm-12">
                            <div class="text-muted">
                                <p class="text-sm">
                                    @Html.HiddenFor(model => model.FiscalYear)
                                    @Html.DisplayNameFor(model => model.FiscalYear)
                                    <b class="d-block text-primary">@Html.DisplayFor(model => model.FiscalYear)</b>
                                </p>
                                <p class="text-sm">
                                    @Html.HiddenFor(model => model.PAPCode)
                                    @Html.DisplayNameFor(model => model.PAPCode)
                                    <b class="d-block text-primary">@Html.DisplayFor(model => model.PAPCode)</b>
                                </p>
                                <p class="text-sm">
                                    @Html.HiddenFor(model => model.ContractCode)
                                    @Html.DisplayNameFor(model => model.ContractCode)
                                    <b class="d-block text-primary">@Html.DisplayFor(model => model.ContractCode)</b>
                                </p>
                                <p class="text-sm">
                                    @Html.HiddenFor(model => model.ContractName)
                                    @Html.DisplayNameFor(model => model.ContractName)
                                    <b class="d-block text-primary">@Html.DisplayFor(model => model.ContractName)</b>
                                </p>
                                <p class="text-sm">
                                    @Html.HiddenFor(model => model.ProcurementProjectType)
                                    @Html.DisplayNameFor(model => model.ProcurementProjectType)
                                    <b class="d-block text-primary">@( Model.ProcurementProjectType.GetAttribute<System.ComponentModel.DataAnnotations.DisplayAttribute>().Name )</b>
                                </p>
                                <p class="text-sm">
                                    @Html.HiddenFor(model => model.ContractStrategy)
                                    @Html.DisplayNameFor(model => model.ContractStrategy)
                                    <b class="d-block text-primary">@( Model.ContractStrategy.GetAttribute<System.ComponentModel.DataAnnotations.DisplayAttribute>().Name )</b>
                                </p>
                                <p class="text-sm">
                                    @Html.HiddenFor(model => model.ModeOfProcurement)
                                    @Html.HiddenFor(model => model.ModeOfProcurementReference)
                                    @Html.DisplayNameFor(model => model.ModeOfProcurement)
                                    <b class="d-block text-primary">@Html.DisplayFor(model => model.ModeOfProcurement)</b>
                                </p>
                                <p class="text-sm">
                                    @Html.HiddenFor(model => model.Classification)
                                    @Html.HiddenFor(model => model.ClassificationReference)
                                    @Html.DisplayNameFor(model => model.Classification)
                                    <b class="d-block text-primary">@Html.DisplayFor(model => model.Classification)</b>
                                </p>
                                <p class="text-sm">
                                    @Html.HiddenFor(model => model.FundDescription)
                                    @Html.HiddenFor(model => model.FundSource)
                                    @Html.DisplayNameFor(model => model.FundSource)
                                    <b class="d-block text-primary">@Html.DisplayFor(model => model.FundDescription)</b>
                                </p>
                                <p class="text-sm">
                                    @Html.HiddenFor(model => model.ContractLocation)
                                    @Html.DisplayNameFor(model => model.ContractLocation)
                                    <b class="d-block text-primary">@Html.DisplayFor(model => model.ContractLocation)</b>
                                </p>
                                <p class="text-sm">
                                    @Html.HiddenFor(model => model.ProjectCoordinator)
                                    @Html.DisplayNameFor(model => model.ProjectCoordinator)
                                    <b class="d-block text-primary">@Html.DisplayFor(model => model.ProjectCoordinator)</b>
                                </p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-sm-12">
            <div class="card">
                <div class="card-header"><h3 class="card-title text-primary" style="font-size:14pt; font-weight:bold"><i class="fas fa-pencil-ruler"></i> &nbsp; Project Items</h3></div>
                <div class="card-body">
                    <div class="card-body table-responsive p-sm-0">
                        <table class="table table-striped table-hover display">
                            <thead>
                                <tr>
                                    <th style="text-align:center; vertical-align:middle" width="5%">Item No.</th>
                                    <th style="text-align:center; vertical-align:middle" width="10%">Quantity</th>
                                    <th style="text-align:center; vertical-align:middle" width="10%">Unit</th>
                                    <th style="text-align:center; vertical-align:middle" width="40%">Item Description</th>
                                    <th style="text-align:center; vertical-align:middle" width="15%">Unit Cost</th>
                                    <th style="text-align:center; vertical-align:middle" width="20%">Total Cost</th>
                                </tr>
                            </thead>
                            <tbody>
                                @for (int i = 0; i < Model.ContractItems.Count; i++)
                                {
                                    <tr>
                                        <td style="text-align:center; vertical-align:middle;">@(i + 1)</td>
                                        <td style="text-align:center; vertical-align:middle;">
                                            @Html.HiddenFor(model => Model.ContractItems[i].Quantity)
                                            @Html.DisplayFor(model => Model.ContractItems[i].Quantity)
                                        </td>
                                        <td style="text-align:center; vertical-align:middle;">
                                            @Html.HiddenFor(model => Model.ContractItems[i].UOMReference)
                                            @Html.HiddenFor(model => Model.ContractItems[i].UnitOfMeasure)
                                            @Html.DisplayFor(model => Model.ContractItems[i].UnitOfMeasure)
                                        </td>
                                        <td style="text-align:left; vertical-align:middle;">
                                            @Html.HiddenFor(model => Model.ContractItems[i].ArticleReference)
                                            @Html.HiddenFor(model => Model.ContractItems[i].ItemSequence)
                                            @Html.HiddenFor(model => Model.ContractItems[i].ItemFullName)
                                            @Html.DisplayFor(model => Model.ContractItems[i].ItemFullName)
                                        </td>
                                        <td style="text-align:right; vertical-align:middle;">
                                            @Html.HiddenFor(model => Model.ContractItems[i].EstimatedUnitCost)
                                            @( Model.ContractItems[i].EstimatedUnitCost.ToString("N", new System.Globalization.CultureInfo("en-ph")) )
                                        </td>
                                        <td style="text-align:right; vertical-align:middle;">
                                            @Html.HiddenFor(model => Model.ContractItems[i].ApprovedBudgetForItem)
                                            @( Model.ContractItems[i].ApprovedBudgetForItem.ToString("N", new System.Globalization.CultureInfo("en-ph")) )
                                        </td>
                                    </tr>
                                }
                            </tbody>

                        </table>
                    </div>

                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-sm-12">
            <div class="card">
                <div class="card-header"><h3 class="card-title text-primary" style="font-size:14pt; font-weight:bold"><i class="fas fa-edit"></i> &nbsp; Update Contract Progress</h3></div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-sm-12">
                            <h3 class="card-title"><b>@( Model.ProcurementProjectStage.GetAttribute<System.ComponentModel.DataAnnotations.DisplayAttribute>().Name )</b></h3>
                        </div>
                    </div>
                    <hr />
                    <div class="row">
                        <div class="col-lg-6 col-md-6 col-sm-12">
                            <div class="form-group">
                                @Html.LabelFor(model => Model.FailureOfBiddingDeclared)
                                <div class="input-group">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text">
                                            @Html.CheckBoxFor(model => Model.FailureOfBiddingDeclared)
                                        </span>
                                    </div>
                                    @Html.Editor("Failure of Bidding Declared", null, new { htmlAttributes = new { @class = "form-control form-control-sm", Value = "Failure of Bidding Declared", disabled = "disabled" } })
                                </div>
                            </div>
                        </div>
                        <div class="coll-lg-6 col-md-6 col-sm-12">
                            <div class="form-group">
                                @Html.LabelFor(model => model.OpeningOfBidsFailureReason, htmlAttributes: new { @class = "control-label" })
                                <div class="input-group">
                                    <div class="input-group-prepend">
                                        <div class="input-group-text"><i class="fa fa-question"></i></div>
                                    </div>
                                    @Html.EnumDropDownListFor(model => model.OpeningOfBidsFailureReason, htmlAttributes: new { @class = "form-control form-control-sm", disabled = "disabled" })
                                </div>
                                @Html.ValidationMessageFor(model => Model.OpeningOfBidsFailureReason, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <hr />
                    <div class="row">
                        <div class="col-sm-12">
                            <div class="form-group">
                                @Html.LabelFor(model => Model.ContractType, htmlAttributes: new { @class = "control-label" })
                                <div class="input-group mb-3">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text"><i class="fa fa-file-contract"></i></span>
                                    </div>
                                    @Html.DropDownList("ContractType", null, htmlAttributes: new { @class = "form-control form-control-sm", onchange = "GetSupplierDetails()" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-12">
                            <div class="form-group">
                                @Html.LabelFor(model => Model.Supplier, htmlAttributes: new { @class = "control-label" })
                                <div class="input-group mb-3">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text"><i class="fa fa-truck-loading"></i></span>
                                    </div>
                                    @Html.DropDownList("Supplier", null, htmlAttributes: new { @class = "form-control form-control-sm select2", style = "font-size:100%; width:90%", onchange = "GetSupplierDetails()" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <hr />
                    <div class="row">
                        <div class="col-sm-12">
                            <h5><i class="fas fa-pencil-ruler"></i> Bid Items</h5>
                            <hr />
                            <div class="card-body table-responsive p-sm-0">
                                <table class="table table-striped table-hover" id="BidItems">
                                    <thead>
                                        <tr>
                                            <th style="text-align:center; vertical-align:middle" width="5%">Item No.</th>
                                            <th style="text-align:center; vertical-align:middle" width="10%">Quantity</th>
                                            <th style="text-align:center; vertical-align:middle" width="10%">Unit</th>
                                            <th style="text-align:center; vertical-align:middle" width="40%">Item Description</th>
                                            <th style="text-align:center; vertical-align:middle" width="15%">Unit Cost</th>
                                            <th style="text-align:center; vertical-align:middle" width="20%">Bid Unit Price</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @for (int i = 0; i < Model.BidDetails.Count; i++)
                                        {
                                            <tr>
                                                <td style="text-align:center; vertical-align:middle;">@(i + 1)</td>
                                                <td style="text-align:center; vertical-align:middle;">
                                                    @Html.HiddenFor(model => Model.BidDetails[i].Quantity)
                                                    @Html.DisplayFor(model => Model.BidDetails[i].Quantity)
                                                </td>
                                                <td style="text-align:center; vertical-align:middle;">
                                                    @Html.HiddenFor(model => Model.BidDetails[i].UOMReference)
                                                    @Html.HiddenFor(model => Model.BidDetails[i].Unit)
                                                    @Html.DisplayFor(model => Model.BidDetails[i].Unit)
                                                </td>
                                                <td style="text-align:left; vertical-align:middle;">
                                                    @Html.HiddenFor(model => Model.BidDetails[i].ArticleReference)
                                                    @Html.HiddenFor(model => Model.BidDetails[i].ItemSequence)
                                                    @Html.HiddenFor(model => Model.BidDetails[i].ItemFullName)
                                                    @Html.HiddenFor(model => Model.BidDetails[i].ItemSpecifications)
                                                    @Html.DisplayFor(model => Model.BidDetails[i].ItemFullName)
                                                </td>
                                                <td style="text-align:right; vertical-align:middle;">
                                                    @Html.HiddenFor(model => Model.BidDetails[i].UnitCost)
                                                    @Html.HiddenFor(model => Model.BidDetails[i].TotalCost)
                                                    @( Model.BidDetails[i].UnitCost.ToString("N", new System.Globalization.CultureInfo("en-ph")) )
                                                </td>
                                                <td style="text-align:right; vertical-align:middle;">
                                                    @Html.EditorFor(model => Model.BidDetails[i].BidUnitPrice, null, new { htmlAttributes = new { @class = "form-control form-control-sm", style = "text-align:right;", placeholder = Html.DisplayNameFor(model => model.BidDetails[i].BidUnitPrice), type = "number", step = "0.01", Value = "0.00", min = "0.00" } })
                                                </td>
                                            </tr>
                                        }
                                    </tbody>

                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-sm-12">
            <div class="card">
                <div class="card-header"><h3 class="card-title text-primary" style="font-size:14pt; font-weight:bold"><i class="fas fa-list-alt"></i> &nbsp;Contract Updates</h3></div>
                <div class="card-body">
                    <div class="card-body table-responsive p-sm-0">
                        <table class="table table-striped table-hover display">
                            <thead>
                                <tr>
                                    <th style="text-align:center; vertical-align:middle" width="25%">Date Updated</th>
                                    <th style="text-align:center; vertical-align:middle" width="20%">Updated By</th>
                                    <th style="text-align:center; vertical-align:middle" width="25%">Contract Stage</th>
                                    <th style="text-align:center; vertical-align:middle" width="35%">Remarks</th>
                                </tr>
                            </thead>
                            <tbody>
                                @for (int i = 0; i < Model.Updates.Count; i++)
                                {
                                    <tr>
                                        <td style="text-align:left; vertical-align:middle;">
                                            @Html.HiddenFor(model => Model.Updates[i].UpdatedAt)
                                            <b>@( Model.Updates[i].UpdatedAt.Value.ToString("dd MMMM yyyy hh:mm tt") )</b>
                                        </td>
                                        <td style="text-align:left; vertical-align:middle;">
                                            @Html.HiddenFor(model => Model.Updates[i].UpdatedBy)
                                            @Html.DisplayFor(model => Model.Updates[i].UpdatedBy)
                                        </td>
                                        <td style="text-align:center; vertical-align:middle;">
                                            @Html.HiddenFor(model => Model.Updates[i].ProcurementProjectStage)
                                            @( Model.Updates[i].ProcurementProjectStage.GetAttribute<System.ComponentModel.DataAnnotations.DisplayAttribute>().Name )
                                        </td>
                                        <td style="text-align:left; vertical-align:middle;">
                                            @Html.HiddenFor(model => Model.Updates[i].Remarks)
                                            @Html.DisplayFor(model => Model.Updates[i].Remarks)
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@section FormFooter{
    <div class="row">
        <div class="col-sm-12 text-right">
            <div class="form-group">
                <button type="button" class="btn btn-primary" onclick="SaveUpdates()"><i class="fa fa-save"></i>&nbsp; Update Contract</button>
                <button type="button" class="btn btn-danger" onclick="window.location = '@Url.Action("list", "ProcurementProjects", new { Area = "procurement" })'"><i class="fa fa-arrow-alt-circle-left"></i>&nbsp; Back to Dashboard</button>
            </div>
        </div>
    </div>
}

<script type="text/javascript">
    $(document).ready(function () {
        $('table.display').DataTable({
            "paging": true,
            "lengthChange": false,
            "searching": false,
            "ordering": false,
            "info": true,
            "autoWidth": false,
            "pageLength": 5
        });
    });

    function GetSupplierDetails()
    {
        var supplier = $("#Supplier").val();
        $.ajax({
            url: '@Url.Action("GetSupplierDetails", "SingleContracts", new { Area = "procurement" })',
            type: "GET",
            dataType: "JSON",
            data: { ID: supplier },
            success: function (supplier) {
                $("#Address").val(supplier.Address);
                $("#ContactPerson").val(supplier.ContactPerson);
                $("#ContactPersonDesignation").val(supplier.ContactPersonDesignation);
                $("#AuthorizedAgent").val(supplier.AuthorizedAgent);
                $("#AuthorizedDesignation").val(supplier.AuthorizedDesignation);
            }
        });
    }

    function SaveUpdates() {
        swal.fire({
            title: "Save Contract Updates?",
            text: "You are about to save this updates for this contract, continue?",
            icon: "question",
            showCancelButton: true,
        }).then((result) => {
            if (result.value) {
                $("#projectDetails").submit();
            }
            else {
                swal.fire({
                    title: "Cancelled!",
                    text: "You have cancelled saving the record.",
                    icon: "error"
                })
            };
        })
    }

    function CreateResult(data) {
        if (data.result == true) {
            swal.fire({
                title: "Contract Updated!",
                text: "Contract is successfully updated.",
                icon: "success"
            }).then((result) => {
                if (result.value) {
                    var url = '@Url.Action("list", "ProcurementProjects", new { Area = "procurement" })';
                    window.location.href = url;
                }
            })
        }
        else {
            swal.fire({
                title: "Record Not Saved!",
                text: "Saving record failed.",
                icon: "error"
            });
        }
        var vsummary = $("#ValidationSummary");
        if (vsummary.val() != null) {
            $("input").blur();
            $(window).scrollTop(0,0);
        }
    }

    $('#FailureOfBiddingDeclared').change(function () {
        var OpeningOfBidsFailureReason = document.getElementById('OpeningOfBidsFailureReason');
        var ContractType = document.getElementById('ContractType');
        var Supplier = document.getElementById('Supplier');
        var BidItems = document.getElementById;


        if ($('#FailureOfBiddingDeclared').prop('checked') == false) {
            OpeningOfBidsFailureReason.disabled = true;
            ContractType.disabled = false;
            Supplier.disabled = false;
            $("table input[type = 'number']").prop('disabled', false);
        }
        else {
            OpeningOfBidsFailureReason.disabled = false;
            ContractType.disabled = true;
            Supplier.disabled = true;
            $("table input[type = 'number']").prop('disabled', true);
        }
    });
</script>