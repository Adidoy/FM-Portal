@model PUPFMIS.Models.OpenContractVM

@{
    ViewBag.Title = "Purchase Request";
    ViewBag.Description = "Create";
    Layout = "~/Views/Shared/_BodyLayout.cshtml";
}

@section BreadCrumb {
    <ol class="breadcrumb float-sm-right">
        <li class="breadcrumb-item"><a href="/"><i class="fa fa-tachometer-alt"></i>&nbsp;@Html.ActionLink("PUP-FM Portal", "index", "Home", new { Area = "" }, null)</a></li>
        <li class="breadcrumb-item">@Html.ActionLink("Procurement Projects", "dashboard", "Dashboard", new { Area = "end-users" }, null)</li>
        <li class="breadcrumb-item">Details</li>
    </ol>
}

@section Header {
    <h3 class="card-title"><i class="fa fa-bookmark"></i> @Model.ContractName <small>(@Model.ContractCode)</small></h3>
}

<div class="row">
    <div class="col-12 col-sm-4">
        <div class="info-box bg-light">
            <div class="info-box-content">
                <span class="info-box-text text-center text-muted">@Html.DisplayNameFor(model => model.ApprovedBudgetForContract)</span>
                <span class="info-box-number text-primary text-center mb-0" style="font-size:14pt;">@( Model.ApprovedBudgetForContract.ToString("C", new System.Globalization.CultureInfo("en-ph")) )</span>
            </div>
        </div>
    </div>
    <div class="col-12 col-sm-4">
        <div class="info-box bg-light">
            <div class="info-box-content">
                <span class="info-box-text text-center text-muted">@Html.DisplayNameFor(model => model.ContractStatus)</span>
                <span class="info-box-number text-primary text-center mb-0" style="font-size:14pt;">@( Model.ContractStatus.GetAttribute<System.ComponentModel.DataAnnotations.DisplayAttribute>().Name )</span>
            </div>
        </div>
    </div>
    <div class="col-12 col-sm-4">
        <div class="info-box bg-light">
            <div class="info-box-content">
                <span class="info-box-text text-center text-muted">Estimated project duration</span>
                <span class="info-box-number text-primary text-center mb-0" style="font-size:14pt;">@( Model.ProcurementProjectStage.GetAttribute<System.ComponentModel.DataAnnotations.DisplayAttribute>().Name )</span>
            </div>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-12 col-md-12 col-lg-8 order-2 order-md-2">
        <div class="row">
            <div class="col-sm-12">
                <h5><i class="fas fa-pencil-ruler"></i> Contract Items</h5>
                <hr />
                <div class="card-body table-responsive p-sm-0">
                    <table class="table table-striped table-hover">
                        <thead>
                            <tr>
                                <th style="text-align:center; vertical-align:middle" width="5%">Item No.</th>
                                <th style="text-align:center; vertical-align:middle" width="10%">Quantity</th>
                                <th style="text-align:center; vertical-align:middle" width="10%">Unit</th>
                                <th style="text-align:center; vertical-align:middle" width="40%">Item Description</th>
                                <th style="text-align:center; vertical-align:middle" width="15%">Unit Cost</th>
                                <th style="text-align:center; vertical-align:middle" width="20%">Total Cost</th>
                            </tr>
                        </thead>
                        <tbody>
                            @for (int i = 0; i < Model.ContractItems.Count; i++)
                            {
                                <tr>
                                    <td style="text-align:center; vertical-align:middle;">@(i + 1)</td>
                                    <td style="text-align:center; vertical-align:middle;">
                                        @Html.HiddenFor(model => Model.ContractItems[i].Quantity)
                                        @Html.DisplayFor(model => Model.ContractItems[i].Quantity)
                                    </td>
                                    <td style="text-align:center; vertical-align:middle;">
                                        @Html.HiddenFor(model => Model.ContractItems[i].UOMReference)
                                        @Html.HiddenFor(model => Model.ContractItems[i].UnitOfMeasure)
                                        @Html.DisplayFor(model => Model.ContractItems[i].UnitOfMeasure)
                                    </td>
                                    <td style="text-align:left; vertical-align:middle;">
                                        @Html.HiddenFor(model => Model.ContractItems[i].ArticleReference)
                                        @Html.HiddenFor(model => Model.ContractItems[i].ItemSequence)
                                        @Html.HiddenFor(model => Model.ContractItems[i].ItemFullName)
                                        @Html.DisplayFor(model => Model.ContractItems[i].ItemFullName)
                                    </td>
                                    <td style="text-align:right; vertical-align:middle;">
                                        @Html.HiddenFor(model => Model.ContractItems[i].EstimatedUnitCost)
                                        @( Model.ContractItems[i].EstimatedUnitCost.ToString("N", new System.Globalization.CultureInfo("en-ph")) )
                                    </td>
                                    <td style="text-align:right; vertical-align:middle;">
                                        @Html.HiddenFor(model => Model.ContractItems[i].ApprovedBudgetForItem)
                                        @( Model.ContractItems[i].ApprovedBudgetForItem.ToString("N", new System.Globalization.CultureInfo("en-ph")) )
                                    </td>
                                </tr>
                            }
                        </tbody>

                    </table>
                </div>

            </div>
        </div>
        <br /><br />
        <div class="row">
            <div class="col-sm-12">
                <h5><i class="fas fa-list-alt"></i> Contract Updates</h5>
                <hr />
                <div class="card-body table-responsive p-sm-0">
                    <table class="table table-striped table-hover">
                        <thead>
                            <tr>
                                <th style="text-align:center; vertical-align:middle" width="25%">Date Updated</th>
                                <th style="text-align:center; vertical-align:middle" width="20%">Updated By</th>
                                <th style="text-align:center; vertical-align:middle" width="25%">Contract Stage</th>
                                <th style="text-align:center; vertical-align:middle" width="35%">Remarks</th>
                            </tr>
                        </thead>
                        <tbody>
                            @for (int i = 0; i < Model.Updates.Count; i++)
                            {
                                <tr>
                                    <td style="text-align:left; vertical-align:middle;">
                                        @Html.HiddenFor(model => Model.Updates[i].UpdatedAt)
                                        <b>@( Model.Updates[i].UpdatedAt.Value.ToString("dd MMMM yyyy hh:mm tt") )</b>
                                    </td>
                                    <td style="text-align:left; vertical-align:middle;">
                                        @Html.HiddenFor(model => Model.Updates[i].UpdatedBy)
                                        @Html.DisplayFor(model => Model.Updates[i].UpdatedBy)
                                    </td>
                                    <td style="text-align:center; vertical-align:middle;">
                                        @Html.HiddenFor(model => Model.Updates[i].ProcurementProjectStage)
                                        @( Model.Updates[i].ProcurementProjectStage.GetAttribute<System.ComponentModel.DataAnnotations.DisplayAttribute>().Name )
                                    </td>
                                    <td style="text-align:left; vertical-align:middle;">
                                        @Html.HiddenFor(model => Model.Updates[i].Remarks)
                                        @Html.DisplayFor(model => Model.Updates[i].Remarks)
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
    <div class="col-12 col-md-12 col-lg-4 order-1 order-md-1">
        <h5><i class="fas fa-file-contract"></i> Contract Details</h5>
        <hr />
        <div class="text-muted">
            <p class="text-sm">
                @Html.HiddenFor(model => model.FiscalYear)
                @Html.DisplayNameFor(model => model.FiscalYear)
                <b class="d-block text-primary">@Html.DisplayFor(model => model.FiscalYear)</b>
            </p>
            <p class="text-sm">
                @Html.HiddenFor(model => model.PAPCode)
                @Html.DisplayNameFor(model => model.PAPCode)
                <b class="d-block text-primary">@Html.DisplayFor(model => model.PAPCode)</b>
            </p>
            <p class="text-sm">
                @Html.HiddenFor(model => model.ContractCode)
                @Html.DisplayNameFor(model => model.ContractCode)
                <b class="d-block text-primary">@Html.DisplayFor(model => model.ContractCode)</b>
            </p>
            <p class="text-sm">
                @Html.HiddenFor(model => model.ContractName)
                @Html.DisplayNameFor(model => model.ContractName)
                <b class="d-block text-primary">@Html.DisplayFor(model => model.ContractName)</b>
            </p>
            <p class="text-sm">
                @Html.HiddenFor(model => model.ContractStrategy)
                @Html.DisplayNameFor(model => model.ContractStrategy)
                <b class="d-block text-primary">@( Model.ContractStrategy.GetAttribute<System.ComponentModel.DataAnnotations.DisplayAttribute>().Name )</b>
            </p>
            <p class="text-sm">
                @Html.HiddenFor(model => model.ModeOfProcurement)
                @Html.HiddenFor(model => model.ModeOfProcurementReference)
                @Html.DisplayNameFor(model => model.ModeOfProcurement)
                <b class="d-block text-primary">@Html.DisplayFor(model => model.ModeOfProcurement)</b>
            </p>
            <p class="text-sm">
                @Html.HiddenFor(model => model.Classification)
                @Html.HiddenFor(model => model.ClassificationReference)
                @Html.DisplayNameFor(model => model.Classification)
                <b class="d-block text-primary">@Html.DisplayFor(model => model.Classification)</b>
            </p>
            <p class="text-sm">
                @Html.HiddenFor(model => model.ContractLocation)
                @Html.DisplayNameFor(model => model.ContractLocation)
                <b class="d-block text-primary">@Html.DisplayFor(model => model.ContractLocation)</b>
            </p>
            <p class="text-sm">
                @Html.HiddenFor(model => model.ProjectCoordinator)
                @Html.DisplayNameFor(model => model.ProjectCoordinator)
                <b class="d-block text-primary">@Html.DisplayFor(model => model.ProjectCoordinator)</b>
            </p>
            <p class="text-sm">
                @Html.HiddenFor(model => model.DeliveryPeriod)
                @Html.DisplayNameFor(model => model.DeliveryPeriod)
                <b class="d-block text-primary">@Html.DisplayFor(model => model.DeliveryPeriod) Calendar Days</b>
            </p>
        </div>
    </div>
</div>
<hr />
<div class="row">
    <div class="col-sm-12">
        <h5><i class="fas fa-edit"></i> Update Contract Progress</h5>
        <hr />
        <div class="row">
            <div class="col-sm-12">
                <div class="card">
                    <div class="card-header"><h3 class="card-title"><b>Purchase Request Submission</b></h3></div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-lg-6 col-md-6 col-sm-12">
                                <div class="form-group">
                                    @Html.LabelFor(model => Model.ContractStatus, htmlAttributes: new { @class = "control-label" })
                                    <div class="input-group">
                                        <div class="input-group-prepend">
                                            <span class="input-group-text"><i class="fa fa-check"></i></span>
                                        </div>
                                        @Html.HiddenFor(model => Model.ContractStatus)
                                        @Html.EditorFor(model => Model.ContractStatus, null, new { htmlAttributes = new { @class = "form-control form-control-sm", disabled = "disabled", Value = Model.ContractStatus.GetAttribute<System.ComponentModel.DataAnnotations.DisplayAttribute>().Name } })
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-6 col-md-6 col-sm-12">
                                <div class="form-group">
                                    @Html.LabelFor(model => Model.ProcurementProjectStage, htmlAttributes: new { @class = "control-label" })
                                    <div class="input-group">
                                        <div class="input-group-prepend">
                                            <span class="input-group-text"><i class="fa fa-check"></i></span>
                                        </div>
                                        @Html.HiddenFor(model => Model.ProcurementProjectStage)
                                        @Html.EditorFor(model => Model.ProcurementProjectStage, null, new { htmlAttributes = new { @class = "form-control form-control-sm", disabled = "disabled", Value = Model.ProcurementProjectStage.GetAttribute<System.ComponentModel.DataAnnotations.DisplayAttribute>().Name } })
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="card-footer text-right">
                        <a class="btn btn-md btn-primary" href="@Url.Action("print-purchase-request-memo", "ProcurementPurchaseRequests", new { Area = "procurement", ContractCode = Model.ContractCode })" target="_blank"><i class="fa fa-print"></i> Print P/R Submission Memorandum</a>
                        <button type="button" class="btn btn-md btn-danger" onclick="ClosePRSubmission()"><i class="fa fa-door-open"></i> Close Purchase Request Submission</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


@section FormFooter{
    <div class="row">
        <div class="col-sm-12 text-right">
            <div class="form-group">
                <button type="button" class="btn btn-danger" onclick="window.location = '@Url.Action("dashboard", "ProcurementPurchaseRequests", new { Area = "procurement" })'"><i class="fa fa-arrow-alt-circle-left"></i>&nbsp; Back to Dashboard</button>
            </div>
        </div>
    </div>
}

<script type="text/javascript">
    $(document).ready(function () {
        $('table.display').DataTable({
            "paging": true,
            "lengthChange": true,
            "searching": true,
            "ordering": false,
            "info": true,
            "autoWidth": false,
        });
    });
    function ClosePRSubmission() {
        var url = '@Url.Action("close-pr-submission", "ProcurementPurchaseRequests", new { Area = "procurement", ContractCode = Model.ContractCode })';
        swal.fire({
            title: "Close P/R Submission?",
            text: "You are about to close the submission of Purchase Requests for this contract, continue?",
            icon: "question",
            showCancelButton: true,
        }).then((result) => {
            if (result.value) {
                $.ajax({
                    url: url,
                    type: 'POST',
                    success: function (data) {
                        if (data.result == true) {
                            swal.fire({
                                title: "P/R Submission Closed",
                                text: "Purchase Request submission for this contract is now closed.",
                                icon: "success"
                            }).then((result) => {
                                if (result.value) {
                                    window.location.href = '@Url.Action("open-submissions", "ProcurementPurchaseRequests", new { Area = "procurement" })'
                                }
                            })
                        }
                        else {
                            swal.fire({
                                title: "Record not Saved",
                                text: "A problem has occured and the record is not updated.",
                                icon: "error"
                            })
                        }
                    },
                    error: function (error) {
                        swal.fire({
                            title: "Error",
                            text: "An error has occured, please try again. If you still get this message, please contact the System Administrator.",
                            icon: "error"
                        })
                    },
                })
            }
            else {
                swal.fire({
                    title: "Cancelled!",
                    text: "You have cancelled saving the record.",
                    icon: "error"
                })
            };
        })
    }
</script>