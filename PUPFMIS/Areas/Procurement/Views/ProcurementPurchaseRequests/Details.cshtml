@model PUPFMIS.Models.PurchaseRequestVM

@{
    ViewBag.Title = "Purchase Requests";
    ViewBag.Description = "Details";
    Layout = "~/Views/Shared/_BodyLayout.cshtml";
}

@section BreadCrumb {
    <ol class="breadcrumb float-sm-right">
        <li class="breadcrumb-item"><a href="/"><i class="fa fa-dashboard"></i>@Html.ActionLink("PUP-FM Portal", "index", "Home")</a></li>
        <li class="breadcrumb-item">@Html.ActionLink("Dashboard", "dashboard", "ProjectPlans", new { area = "end-users" }, null)</li>
        <li class="breadcrumb-item">Project Items</li>
    </ol>
}

@section Header {
    <div class="col-md-12 text-right">
        <h1 class="card-title"><i class="fa fa-bookmark"></i> Purchase Request No.: @Model.PRNumber</h1>
    </div>
}
@using (Ajax.BeginForm("details", "ProcurementPurchaseRequests", new AjaxOptions() { HttpMethod = "POST", OnSuccess = "CreateResult" }, htmlAttributes: new { id = "details", Area = "procurement" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(d => d.PRNumber)
    <div class="row">
        <div class="col-sm-12">
            <div class="bg-info">
                <h6 class="p-2">PURCHASE REQUEST DETAILS</h6>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-sm-12">
            <div class="row">
                <div class="col-lg-6 col-md-6 col-sm-12">
                    <div class="form-group">
                        @Html.LabelFor(model => model.PRNumber, htmlAttributes: new { @class = "control-label" })
                        <div class="input-group mb-3">
                            <div class="input-group-prepend">
                                <span class="input-group-text"><i class="fa fa-id-badge"></i></span>
                            </div>
                            @Html.EditorFor(model => model.PRNumber, new { htmlAttributes = new { @class = "form-control form-control-sm", style = "font-size: 100%", disabled = "disabled" } })
                        </div>
                        @Html.ValidationMessageFor(model => model.PRNumber, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-lg-6 col-md-6 col-sm-12">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Department, htmlAttributes: new { @class = "control-label" })
                        <div class="input-group mb-3">
                            <div class="input-group-prepend">
                                <span class="input-group-text"><i class="fa fa-building"></i></span>
                            </div>
                            @Html.EditorFor(model => model.Department, new { htmlAttributes = new { @class = "form-control form-control-sm", style = "font-size: 100%", disabled = "disabled" } })
                        </div>
                        @Html.ValidationMessageFor(model => model.Department, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-6 col-md-6 col-sm-12">
                    <div class="form-group">
                        @Html.LabelFor(model => model.RequestedBy, htmlAttributes: new { @class = "control-label" })
                        <div class="input-group mb-3">
                            <div class="input-group-prepend">
                                <span class="input-group-text"><i class="fa fa-user"></i></span>
                            </div>
                            @Html.EditorFor(model => model.RequestedBy, new { htmlAttributes = new { @class = "form-control form-control-sm", style = "font-size: 100%", disabled = "disabled" } })
                        </div>
                        @Html.ValidationMessageFor(model => model.RequestedBy, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-lg-6 col-md-6 col-sm-12">
                    <div class="form-group">
                        @Html.LabelFor(model => model.RequestedByDesignation, htmlAttributes: new { @class = "control-label" })
                        <div class="input-group mb-3">
                            <div class="input-group-prepend">
                                <span class="input-group-text"><i class="fa fa-user"></i></span>
                            </div>
                            @Html.EditorFor(model => model.RequestedByDesignation, new { htmlAttributes = new { @class = "form-control form-control-sm", style = "font-size: 100%", disabled = "disabled", Value = Model.RequestedByDesignation + ", " + Model.RequestedByDepartment } })
                        </div>
                        @Html.ValidationMessageFor(model => model.RequestedByDesignation, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-6 col-md-6 col-sm-12">
                    <div class="form-group">
                        @Html.LabelFor(model => model.ApprovedBy, htmlAttributes: new { @class = "control-label" })
                        <div class="input-group mb-3">
                            <div class="input-group-prepend">
                                <span class="input-group-text"><i class="fa fa-user"></i></span>
                            </div>
                            @Html.EditorFor(model => model.ApprovedBy, new { htmlAttributes = new { @class = "form-control form-control-sm", style = "font-size: 100%", disabled = "disabled" } })
                        </div>
                        @Html.ValidationMessageFor(model => model.ApprovedBy, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-lg-6 col-md-6 col-sm-12">
                    <div class="form-group">
                        @Html.LabelFor(model => model.ApprovedByDesignation, htmlAttributes: new { @class = "control-label" })
                        <div class="input-group mb-3">
                            <div class="input-group-prepend">
                                <span class="input-group-text"><i class="fa fa-user"></i></span>
                            </div>
                            @Html.EditorFor(model => model.ApprovedByDesignation, new { htmlAttributes = new { @class = "form-control form-control-sm", style = "font-size: 100%", disabled = "disabled", Value = Model.ApprovedByDesignation + ", " + Model.ApprovedByDepartment } })
                        </div>
                        @Html.ValidationMessageFor(model => model.ApprovedByDesignation, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
    </div>
    <br /><hr /><br />
    <div class="row">
        <div class="col-sm-12">
            <div class="bg-info">
                <h6 class="p-2">PURCHASE REQUEST LINE ITEMS</h6>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-sm-12">
            <table class="table table-striped table-hover" id="items">
                <thead>
                    <tr>
                        <th style="text-align:center; vertical-align:middle" width="35%">Item Specification</th>
                        <th style="text-align:center; vertical-align:middle" width="15%">@Html.DisplayNameFor(d => d.PRDetails.First().UOM)</th>
                        <th style="text-align:center; vertical-align:middle" width="15%">@Html.DisplayNameFor(d => d.PRDetails.First().Quantity)</th>
                        <th style="text-align:center; vertical-align:middle" width="15%">@Html.DisplayNameFor(d => d.PRDetails.First().UnitCost)</th>
                        <th style="text-align:center; vertical-align:middle" width="20%">@Html.DisplayNameFor(d => d.PRDetails.First().TotalCost)</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.PRDetails)
                    {
                        <tr>
                            <td style="text-align:justify; vertical-align: middle;">
                                <div class="row">
                                    <div class="col-sm-4"><b>@Html.DisplayNameFor(d => item.ItemCode)</b></div>
                                    <div class="col-sm-8">: @Html.DisplayFor(d => item.ItemCode)</div>
                                </div>
                                <div class="row">
                                    <div class="col-sm-4"><b>@Html.DisplayNameFor(d => item.ItemName)</b></div>
                                    <div class="col-sm-8">: @Html.DisplayFor(d => item.ItemName)</div>
                                </div>
                                <div class="row">
                                    <div class="col-sm-4"><b>@Html.DisplayNameFor(d => item.ItemSpecifications)</b></div>
                                    <div class="col-sm-8">: @Html.DisplayFor(d => item.ItemSpecifications)</div>
                                </div>
                            </td>
                            <td style="text-align:center; vertical-align: middle;">
                                @Html.DisplayFor(d => item.UOM)
                            </td>
                            <td style="text-align:center; vertical-align: middle;">
                                @Html.DisplayFor(d => item.Quantity)
                            </td>
                            <td style="text-align:center; vertical-align: middle;">
                                @( item.UnitCost.ToString("C", new System.Globalization.CultureInfo("en-ph")) )
                            </td>
                            <td style="text-align:center; vertical-align: middle;">
                                @( item.TotalCost.ToString("C", new System.Globalization.CultureInfo("en-ph")) )
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
}

@section FormFooter {
    <div class="row">
        <div class="col-sm-12 text-right">
            <div class="form-group">
                <button type="button" class="btn btn-primary" onclick="OpenSubmission()"><i class="fa fa-thumbs-up"></i>&nbsp; Receive P/R Submission</button>
                <button type="button" class="btn btn-danger" onclick="window.location = '@Url.Action("pending-submissions", "ProcurementPurchaseRequests", new { area = "procurement" })'"><i class="fa fa-arrow-alt-circle-left"></i>&nbsp; Back to Dashboard</button>
            </div>
        </div>
    </div>
}

<script type="text/javascript">
    $(function () {
        $('#items').DataTable({
            "paging": true,
            "pageLength": 10,
            "lengthChange": false,
            "searching": true,
            "ordering": false,
            "info": true,
            "autoWidth": false,
        });
    });
</script>

<script type="text/javascript">
    function OpenSubmission() {
        swal.fire({
            title: "Save record?",
            text: "You are about to save this record, continue?",
            icon: "question",
            showCancelButton: true,
        }).then((result) => {
            if (result.value) {
                $("#details").submit();
            }
            else {
                swal.fire({
                    title: "Cancelled!",
                    text: "You have cancelled saving the record.",
                    icon: "error"
                })
            };
        })
    }
    function CreateResult(data) {
        if (data.result == true) {
            swal.fire({
                title: "Record Saved!",
                text: "Purchase Request receipt is successfully saved.",
                icon: "success"
            }).then((result) => {
                if (result.value) {
                    window.location.href = "@Url.Action("pending-submissions", "ProcurementPurchaseRequests", new { Area = "procurement" })";
                }
            })
        }
        else {
            swal.fire({
                title: "Record Not Saved!",
                text: "Saving record failed.",
                icon: "error"
            });
        }
    }
</script>