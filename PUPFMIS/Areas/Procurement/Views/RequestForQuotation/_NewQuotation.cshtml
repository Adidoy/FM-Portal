@model PUPFMIS.Models.QuotationVM

<div class="card card-info">
    <div class="card-header"><h3 class="card-title">Supplier Quotation Details</h3></div>
    <div class="card-body">
        <div class="row">
            <div class="col-sm-12">
                <div class="form-group">
                    @Html.LabelFor(model => Model.SupplierName, htmlAttributes: new { @class = "control-label" })
                    <div class="input-group">
                        <div class="input-group-prepend">
                            <span class="input-group-text"><i class="fa fa-truck-loading"></i></span>
                        </div>
                        @Html.DropDownList("SupplierReference", null, htmlAttributes: new { @class = "form-control form-control-sm select2", style = "width: 85%" })
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-lg-6 col-md-6 col-sm-12">
                <div class="form-group">
                    @Html.LabelFor(model => Model.Address, htmlAttributes: new { @class = "control-label" })
                    <div class="input-group">
                        <div class="input-group-prepend">
                            <span class="input-group-text"><i class="fa fa-home"></i></span>
                        </div>
                        @Html.EditorFor(model => Model.Address, null, new { htmlAttributes = new { @class = "form-control form-control-sm", disabled = "disabled" } })
                    </div>
                </div>
            </div>
            <div class="col-lg-6 col-md-6 col-sm-12">
                <div class="form-group">
                    @Html.LabelFor(model => Model.TaxIdNumber, htmlAttributes: new { @class = "control-label" })
                    <div class="input-group">
                        <div class="input-group-prepend">
                            <span class="input-group-text"><i class="fa fa-id-card-alt"></i></span>
                        </div>
                        @Html.EditorFor(model => Model.TaxIdNumber, null, new { htmlAttributes = new { @class = "form-control form-control-sm", disabled = "disabled" } })
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-lg-6 col-md-6 col-sm-12">
                <div class="form-group">
                    @Html.LabelFor(model => Model.ContactPerson, htmlAttributes: new { @class = "control-label" })
                    <div class="input-group">
                        <div class="input-group-prepend">
                            <span class="input-group-text"><i class="fa fa-user"></i></span>
                        </div>
                        @Html.EditorFor(model => Model.ContactPerson, null, new { htmlAttributes = new { @class = "form-control form-control-sm", disabled = "disabled" } })
                    </div>
                </div>
            </div>
            <div class="col-lg-6 col-md-6 col-sm-12">
                <div class="form-group">
                    @Html.LabelFor(model => Model.ContactNumber, htmlAttributes: new { @class = "control-label" })
                    <div class="input-group">
                        <div class="input-group-prepend">
                            <span class="input-group-text"><i class="fa fa-phone-alt"></i></span>
                        </div>
                        @Html.EditorFor(model => Model.ContactNumber, null, new { htmlAttributes = new { @class = "form-control form-control-sm", disabled = "disabled" } })
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-lg-6 col-md-6 col-sm-12">
                <div class="form-group">
                    @Html.LabelFor(model => Model.EmailAddress, htmlAttributes: new { @class = "control-label" })
                    <div class="input-group">
                        <div class="input-group-prepend">
                            <span class="input-group-text"><i class="fa fa-at"></i></span>
                        </div>
                        @Html.EditorFor(model => Model.EmailAddress, null, new { htmlAttributes = new { @class = "form-control form-control-sm", disabled = "disabled", Value = Model.EmailAddress == null ? "No data supplied" : Model.EmailAddress } })
                    </div>
                </div>
            </div>
            <div class="col-lg-6 col-md-6 col-sm-12">
                <div class="form-group">
                    @Html.LabelFor(model => Model.SubmittedAt, htmlAttributes: new { @class = "control-label" })
                    <div class="input-group date" id="SubmittedAt1" data-target-input="nearest">
                        <div class="input-group-prepend" data-target="#SubmittedAt1" data-toggle="datetimepicker">
                            <div class="input-group-text"><i class="fa fa-calendar"></i></div>
                        </div>
                        @Html.EditorFor(model => Model.SubmittedAt, new { htmlAttributes = new { @class = "form-control form-control-sm datetimepicker-input", data_target = "#SubmittedAt1", style = "font-size: 100%", placeholder = Html.DisplayNameFor(model => Model.SubmittedAt), Value = Model.SubmittedAt == null || Model.SubmittedAt == Convert.ToDateTime("01/01/0001 12:00 AM") ? (DateTime?)null : Model.SubmittedAt } })
                    </div>
                    @Html.ValidationMessageFor(model => Model.SubmittedAt, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>
</div>
<div class="card card-info">
    <div class="card-header"><h3 class="card-title">Item Details</h3></div>
    <div class="card-body">
        <div class="card-body table-responsive p-sm-0">
            <table class="table table-striped table-hover">
                <thead>
                    <tr>
                        <th style="text-align: center; vertical-align: middle;" width="7%">
                            #
                        </th>
                        <th style="text-align: center; vertical-align: middle;" width="15%">
                            Unit
                        </th>
                        <th style="text-align: center; vertical-align: middle;" width="43%">
                            Description
                        </th>
                        <th style="text-align: center; vertical-align: middle;" width="15%">
                            Quantity
                        </th>
                        <th style="text-align: center; vertical-align: middle;" width="20%">
                            Unit Price
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @for (var i = 0; i < Model.QuotationDetails.Count; i++)
                    {
                        <tr>
                            <td style="text-align:center; vertical-align:top;">
                                @( i + 1 )
                            </td>
                            <td style="text-align:center; vertical-align:top;">
                                @Html.HiddenFor(modelItem => Model.QuotationDetails[i].UOMReference)
                                @Html.HiddenFor(modelItem => Model.QuotationDetails[i].UnitOfMeasure)
                                @Html.DisplayFor(modelItem => Model.QuotationDetails[i].UnitOfMeasure)
                            </td>
                            <td style="text-align:justify; vertical-align:top;">

                                @Html.HiddenFor(modelItem => Model.QuotationDetails[i].ArticleReference)
                                @Html.HiddenFor(modelItem => Model.QuotationDetails[i].ItemSequence)
                                @Html.HiddenFor(modelItem => Model.QuotationDetails[i].ItemFullName)
                                @Html.HiddenFor(modelItem => Model.QuotationDetails[i].ItemSpecifications)
                                <div class="row">
                                    <div class="col-sm-12">
                                        <b>@Html.DisplayFor(modelItem => Model.QuotationDetails[i].ItemFullName)</b>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-sm-12">
                                        <i>@Html.DisplayFor(modelItem => Model.QuotationDetails[i].ItemSpecifications)</i>
                                    </div>
                                </div>
                            </td>
                            <td style="text-align:center; vertical-align:top;">
                                @Html.HiddenFor(modelItem => Model.QuotationDetails[i].Quantity)
                                @Html.DisplayFor(modelItem => Model.QuotationDetails[i].Quantity)
                            </td>
                            <td style="text-align:left; vertical-align:top;">
                                <div class="form-group">
                                    @Html.LabelFor(model => Model.QuotationDetails[i].NoOffer)
                                    <div class="input-group">
                                        <div class="input-group-prepend">
                                            <span class="input-group-text">
                                                @Html.CheckBoxFor(model => Model.QuotationDetails[i].NoOffer)
                                            </span>
                                        </div>
                                        @Html.Editor("Supplier has no offer for this item.", null, new { htmlAttributes = new { @class = "form-control form-control-sm", Value = "Supplier has no offer for this item.", disabled = "disabled" } })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(modelItem => Model.QuotationDetails[i].UnitPrice)
                                    @Html.EditorFor(modelItem => Model.QuotationDetails[i].UnitPrice, null, new { htmlAttributes = new { @class = "form-control form-control-sm", style = "text-align:right;", type = "number", min = "0.00", step = "0.01" } })
                                    @Html.ValidationMessageFor(model => Model.QuotationDetails[i].UnitPrice, "", new { @class = "text-danger" })
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>