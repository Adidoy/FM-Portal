@model PUPFMIS.Models.RequestForQuotationFullVM

@{
    ViewBag.Title = "Requests for Quotation";
    ViewBag.Description = "Details";
    Layout = "~/Views/Shared/_BodyLayout.cshtml";
}

@section BreadCrumb {
    <ol class="breadcrumb float-sm-right">
        <li class="breadcrumb-item"><a href="/"><i class="fa fa-tachometer-alt"></i>&nbsp;@Html.ActionLink("PUP-FM Portal", "index", "Home", new { Area = "" }, null)</a></li>
        <li class="breadcrumb-item">@Html.ActionLink("Request for Quotation", "dashboard", "RequestForQuotation", new { Area = "procurement" }, null)</li>
        <li class="breadcrumb-item">Details</li>
    </ol>
}

@section Header {
    <h3 class="card-title"><i class="fa fa-list"></i> @Model.ContractName <small>(@Model.ContractCode)</small></h3>
}

<div class="card card-info">
    <div class="card-header"><h3 class="card-title">Request For Quotation Details</h3></div>
    <div class="card-body">
        <div class="row">
            <div class="col-lg-6 col-md-6 col-sm-12">
                <div class="form-group">
                    @Html.LabelFor(model => Model.SolicitationNo, htmlAttributes: new { @class = "control-label" })
                    <div class="input-group">
                        <div class="input-group-prepend">
                            <span class="input-group-text"><i class="fa fa-barcode"></i></span>
                        </div>
                        @Html.HiddenFor(model => Model.SolicitationNo)
                        @Html.EditorFor(model => Model.SolicitationNo, null, new { htmlAttributes = new { @class = "form-control form-control-sm", disabled = "disabled" } })
                    </div>
                </div>
            </div>
            <div class="col-lg-6 col-md-6 col-sm-12">
                <div class="form-group">
                    @Html.LabelFor(model => Model.ContractCode, htmlAttributes: new { @class = "control-label" })
                    <div class="input-group">
                        <div class="input-group-prepend">
                            <span class="input-group-text"><i class="fa fa-id-card"></i></span>
                        </div>
                        @Html.HiddenFor(model => Model.ContractCode)
                        @Html.EditorFor(model => Model.ContractCode, null, new { htmlAttributes = new { @class = "form-control form-control-sm", disabled = "disabled" } })
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-sm-12">
                <div class="form-group">
                    @Html.LabelFor(model => Model.ContractName, htmlAttributes: new { @class = "control-label" })
                    <div class="input-group">
                        <div class="input-group-prepend">
                            <span class="input-group-text"><i class="fa fa-id-badge"></i></span>
                        </div>
                        @Html.HiddenFor(model => Model.ContractName)
                        @Html.EditorFor(model => Model.ContractName, null, new { htmlAttributes = new { @class = "form-control form-control-sm", disabled = "disabled" } })
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-lg-6 col-md-6 col-sm-12">
                <div class="form-group">
                    @Html.LabelFor(model => Model.FiscalYear, htmlAttributes: new { @class = "control-label" })
                    <div class="input-group">
                        <div class="input-group-prepend">
                            <span class="input-group-text"><i class="fa fa-calendar"></i></span>
                        </div>
                        @Html.HiddenFor(model => Model.FiscalYear)
                        @Html.EditorFor(model => Model.FiscalYear, null, new { htmlAttributes = new { @class = "form-control form-control-sm", disabled = "disabled" } })
                    </div>
                </div>
            </div>
            <div class="col-lg-6 col-md-6 col-sm-12">
                <div class="form-group">
                    @Html.LabelFor(model => Model.Deadline, htmlAttributes: new { @class = "control-label" })
                    <div class="input-group">
                        <div class="input-group-prepend">
                            <span class="input-group-text"><i class="fa fa-calendar"></i></span>
                        </div>
                        @Html.HiddenFor(model => Model.Deadline)
                        @Html.EditorFor(model => Model.Deadline, null, new { htmlAttributes = new { @class = "form-control form-control-sm", disabled = "disabled", Value = Model.Deadline.ToString("dd MMMM yyyy hh:mm tt") } })
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="card-footer">
        <div class="row">
            <div class="col-sm-12 text-right">
                <div class="form-group">
                    <a class="btn btn-md btn-primary" href="@Url.Action("print", "RequestForQuotation", new { Area = "procurement", SolicitationNo = Model.SolicitationNo })" target="_blank"><i class="fa fa-print"></i> Print Request for Quotation</a>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="card card-info">
    <div class="card-header"><h3 class="card-title">Quotations Solicited</h3></div>
    <div class="card-body">
        @if (Model.IsSubmissionOpen == true)
        {
            <div class="row">
                <div class="col-sm-12">
                    <div class="float-right">
                        <button type="button" class="btn btn-md btn-warning" onclick="window.location.href = '@Url.Action("new-quotation", "RequestForQuotation", new { Area = "procurement", SolicitationNo = Model.SolicitationNo })'"><i class="fa fa-plus"></i> Add New Quotation</button>
                    </div>
                </div>
            </div>
        }
        <hr />
        <div class="row">
            <div class="col-sm-12">
                <div class="card-body table-responsive p-sm-0">
                    <table class="table table-striped table-hover display">
                        <thead>
                            <tr>
                                <th style="text-align: center; vertical-align: middle;" width="15%">
                                    Quotation No.
                                </th>
                                <th style="text-align: center; vertical-align: middle;" width="40%">
                                    Supplier
                                </th>
                                <th style="text-align: center; vertical-align: middle;" width="20%">
                                    Date Recorded
                                </th>
                                <th style="text-align: center; vertical-align: middle;" width="25%">
                                    Action
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.Quotations)
                            {
                                <tr>
                                    <td style="text-align:center; vertical-align:middle;">
                                        <b>@Html.DisplayFor(modelItem => item.QuotationNo)</b>
                                    </td>
                                    <td style="text-align:left; vertical-align:middle">
                                        <div class="row">
                                            <div class="col-sm-12">
                                                <b>@Html.DisplayFor(modelItem => item.SupplierName)</b>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-sm-12">
                                                <i>@Html.DisplayFor(modelItem => item.ContactPerson)</i>
                                            </div>
                                        </div>
                                    </td>
                                    <td style="text-align:center; vertical-align:middle;">
                                        <b>@( item.RecordedAt.ToString("dd MMMM yyyy hh:mm tt") )</b>
                                    </td>
                                    <td style="text-align:center; vertical-align:middle;">
                                        <button type="button" class="btn btn-sm btn-primary" onclick="window.location = '@Url.Action("quotation-details", "RequestForQuotation", new { Area = "procurement", QuotationNo = item.QuotationNo })'"><i class="fa fa-eye"></i> View Quotation</button>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

@section FormFooter {
    <div class="row">
        <div class="col-sm-12 text-right">
            <div class="form-group">
                @if (Model.Quotations.Count > 0 && Model.IsSubmissionOpen == true)
                {
                    <button class="btn btn-md btn-primary" onclick="CloseRFQSubmission()"><i class="fa fa-save"></i> Close RFQ Submission</button>
                }
                <button type="button" class="btn btn-danger" onclick="window.location = '@Url.Action("dashboard", "RequestForQuotation", new { area = "procurement" })'"><i class="fa fa-arrow-alt-circle-left"></i>&nbsp; Back to Dashboard</button>
            </div>
        </div>
    </div>
}

<script type="text/javascript">
    $(function () {
        $('table.display').DataTable({
            "paging": true,
            "lengthChange": true,
            "searching": true,
            "ordering": false,
            "info": true,
            "autoWidth": false,
        });
    });
    function CloseRFQSubmission() {
        var url = '@Url.Action("close-submission", "RequestForQuotation", new { Area = "procurement", SolicitationNo = Model.SolicitationNo })';
        swal.fire({
            title: "Close RFQ Submission?",
            text: "You are about to close the submission of Request for Quotation for this contract, continue?",
            icon: "question",
            showCancelButton: true,
        }).then((result) => {
            if (result.value) {
                $.ajax({
                    url: url,
                    type: 'POST',
                    success: function (data) {
                        if (data.result == true) {
                            swal.fire({
                                title: "RFQ Submission Closed",
                                text: "Request for Quotation submission for this contract is now closed!",
                                icon: "success"
                            }).then((result) => {
                                if (result.value) {
                                    window.location.href = '@Url.Action("index", "RequestForQuotation", new { Area = "procurement", FiscalYear = Model.FiscalYear })'
                                }
                            })
                        }
                        else {
                            swal.fire({
                                title: "Record not Saved",
                                text: "A problem has occured and the record is not updated.",
                                icon: "error"
                            })
                        }
                    },
                    error: function (error) {
                        swal.fire({
                            title: "Error",
                            text: "An error has occured, please try again. If you still get this message, please contact the System Administrator.",
                            icon: "error"
                        })
                    },
                })
            }
            else {
                swal.fire({
                    title: "Cancelled!",
                    text: "You have cancelled saving the record.",
                    icon: "error"
                })
            };
        })
    }
</script>