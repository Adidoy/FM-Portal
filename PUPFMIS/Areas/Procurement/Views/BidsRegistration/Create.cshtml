@model PUPFMIS.Models.BidsVM

@{
    ViewBag.Title = "Bids";
    ViewBag.Description = "Create";
    Layout = "~/Views/Shared/_BodyLayout.cshtml";
}

@section BreadCrumb {
    <ol class="breadcrumb float-sm-right">
        <li class="breadcrumb-item"><a href="/"><i class="fa fa-tachometer-alt"></i>&nbsp;@Html.ActionLink("PUP-FM Portal", "index", "Home", new { Area = "" }, null)</a></li>
        <li class="breadcrumb-item">@Html.ActionLink("Bids Dashobard", "dashboard", "BidsRegistration", new { Area = "procurement" }, null)</li>
        <li class="breadcrumb-item">Create Bids</li>
    </ol>
}

@using (Ajax.BeginForm("create", "BidsRegistration", null, new AjaxOptions() { HttpMethod = "POST", OnSuccess = "CreateResult", UpdateTargetId = "form-container" }, htmlAttributes: new { id = "projectDetails", Area = "procurement" }))
{
    @Html.AntiForgeryToken()
    <div class="row">
        <div class="col-12 col-md-12 col-lg-8 order-2 order-md-2">
            <div class="row">
                <div class="col-sm-12">
                    <h5><i class="fas fa-pencil-ruler"></i> Bid Details</h5>
                    <hr />
                    <div class="row">
                        <div class="col-lg-6 col-md-6 col-sm-12">
                            <div class="form-group">
                                @Html.LabelFor(model => Model.BidReferenceNo, htmlAttributes: new { @class = "control-label" })
                                <div class="input-group">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text"><i class="fa fa-id-badge"></i></span>
                                    </div>
                                    @Html.HiddenFor(model => Model.BidReferenceNo)
                                    @Html.EditorFor(model => Model.BidReferenceNo, null, new { htmlAttributes = new { @class = "form-control form-control-sm", disabled = "disabled" } })
                                </div>
                                @Html.ValidationMessageFor(model => Model.BidReferenceNo, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-lg-6 col-md-6 col-sm-12">
                            <div class="form-group">
                                @Html.LabelFor(model => model.SubmittedAt, htmlAttributes: new { @class = "control-label" })
                                <div class="input-group date" id="SubmittedAt1" data-target-input="nearest">
                                    <div class="input-group-prepend" data-target="#SubmittedAt1" data-toggle="datetimepicker">
                                        <div class="input-group-text"><i class="fa fa-calendar"></i></div>
                                    </div>
                                    @Html.EditorFor(model => Model.SubmittedAt, new { htmlAttributes = new { @class = "form-control form-control-sm datetimepicker-input", data_target = "#SubmittedAt1", style = "font-size: 100%", placeholder = Html.DisplayNameFor(model => Model.SubmittedAt), Value = string.Empty } })
                                </div>
                                @Html.ValidationMessageFor(model => Model.SubmittedAt, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-12">
                            <div class="form-group">
                                @Html.LabelFor(model => Model.SupplierReference, htmlAttributes: new { @class = "control-label" })
                                <div class="input-group">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text"><i class="fa fa-truck-loading"></i></span>
                                    </div>
                                    @Html.DropDownList("SupplierReference", null, htmlAttributes: new { @class = "form-control form-control-sm select2", style = "font-size:100%; width:90%" })
                                </div>
                                @Html.ValidationMessageFor(model => Model.SupplierReference, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-6 col-md-6 col-sm-12">
                            <div class="form-group">
                                @Html.LabelFor(model => Model.IsBidSecurityRequired)
                                <div class="input-group">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text">
                                            @Html.CheckBoxFor(model => Model.IsBidSecurityRequired)
                                        </span>
                                    </div>
                                    @Html.Editor("Is Bid Security Required?", null, new { htmlAttributes = new { @class = "form-control form-control-sm", Value = "Bid Security is Required.", disabled = "disabled" } })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-md-6 col-sm-12">
                            <div class="form-group">
                                @Html.LabelFor(model => Model.IsPerformaceSecurityRequired)
                                <div class="input-group">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text">
                                            @Html.CheckBoxFor(model => Model.IsPerformaceSecurityRequired)
                                        </span>
                                    </div>
                                    @Html.Editor("Is Bid Performance Required?", null, new { htmlAttributes = new { @class = "form-control form-control-sm", Value = "Performance Security is Required.", disabled = "disabled" } })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <br /><br />
            <div class="row">
                <div class="col-sm-12">
                    <h5><i class="fas fa-pencil-ruler"></i> Bid Items</h5>
                    <hr />
                    <div class="card-body table-responsive p-sm-0">
                        <table class="table table-striped table-hover display">
                            <thead>
                                <tr>
                                    <th style="text-align:center; vertical-align:middle" width="10%">Item No.</th>
                                    <th style="text-align:center; vertical-align:middle" width="15%">Qty</th>
                                    <th style="text-align:center; vertical-align:middle" width="35%">Item and Description</th>
                                    <th style="text-align:center; vertical-align:middle" width="20%">Bid Action</th>
                                    <th style="text-align:center; vertical-align:middle" width="20%">Bid Price</th>
                                </tr>
                            </thead>
                            <tbody>
                                @for (int i = 0; i < Model.BidDetails.Count; i++)
                                {
                                    <tr>
                                        <td style="text-align:center; vertical-align:middle;">@(i + 1)</td>
                                        <td style="text-align:center; vertical-align:middle;">
                                            @Html.HiddenFor(model => Model.BidDetails[i].Quantity)
                                            @Html.DisplayFor(model => Model.BidDetails[i].Quantity)
                                        </td>
                                        <td style="text-align:left; vertical-align:middle;">
                                            @Html.HiddenFor(model => Model.BidDetails[i].ArticleReference)
                                            @Html.HiddenFor(model => Model.BidDetails[i].ItemSequence)
                                            @Html.HiddenFor(model => Model.BidDetails[i].ItemFullName)
                                            @Html.HiddenFor(model => Model.BidDetails[i].UOMReference)
                                            @Html.DisplayFor(model => Model.BidDetails[i].ItemFullName)
                                        </td>
                                        <td style="text-align:center; vertical-align:middle;">
                                            @Html.DropDownListFor(model => Model.BidDetails[i].BidAction, new SelectList(ViewBag.BidAction, "Value", "Text"), htmlAttributes: new { @class = "form-control form-control-sm" } )
                                        </td>
                                        <td style="text-align:right; vertical-align:middle;">
                                            @Html.EditorFor(model => Model.BidDetails[i].BidUnitPrice, null, new { htmlAttributes = new { @class = "form-control form-control-sm", style = "text-align:right;", placeholder = Html.DisplayNameFor(model => model.BidDetails[i].BidUnitPrice), type = "number", step = "0.01", Value = "0.00", min = "0.00" } })
                                            @Html.ValidationMessageFor(model => Model.BidDetails[i].BidUnitPrice, "", new { @class = "text-danger" })
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-12 col-md-12 col-lg-4 order-1 order-md-1">
            <h5><i class="fas fa-file-contract"></i> Contract Details</h5>
            <hr />
            <div class="text-muted">
                <p class="text-sm">
                    @Html.HiddenFor(model => model.FiscalYear)
                    @Html.DisplayNameFor(model => model.FiscalYear)
                    <b class="d-block text-primary">@Html.DisplayFor(model => model.FiscalYear)</b>
                </p>
                <p class="text-sm">
                    @Html.HiddenFor(model => model.PAPCode)
                    @Html.DisplayNameFor(model => model.PAPCode)
                    <b class="d-block text-primary">@Html.DisplayFor(model => model.PAPCode)</b>
                </p>
                <p class="text-sm">
                    @Html.HiddenFor(model => model.ContractCode)
                    @Html.DisplayNameFor(model => model.ContractCode)
                    <b class="d-block text-primary">@Html.DisplayFor(model => model.ContractCode)</b>
                </p>
                <p class="text-sm">
                    @Html.HiddenFor(model => model.ContractName)
                    @Html.DisplayNameFor(model => model.ContractName)
                    <b class="d-block text-primary">@Html.DisplayFor(model => model.ContractName)</b>
                </p>
                <p class="text-sm">
                    @Html.HiddenFor(model => model.ContractStrategy)
                    @Html.DisplayNameFor(model => model.ContractStrategy)
                    <b class="d-block text-primary">@( Model.ContractStrategy.GetAttribute<System.ComponentModel.DataAnnotations.DisplayAttribute>().Name )</b>
                </p>
                <p class="text-sm">
                    @Html.HiddenFor(model => model.ModeOfProcurement)
                    @Html.HiddenFor(model => model.ModeOfProcurementReference)
                    @Html.DisplayNameFor(model => model.ModeOfProcurement)
                    <b class="d-block text-primary">@Html.DisplayFor(model => model.ModeOfProcurement)</b>
                </p>
                <p class="text-sm">
                    @Html.HiddenFor(model => model.Classification)
                    @Html.HiddenFor(model => model.ClassificationReference)
                    @Html.DisplayNameFor(model => model.Classification)
                    <b class="d-block text-primary">@Html.DisplayFor(model => model.Classification)</b>
                </p>
                <p class="text-sm">
                    @Html.HiddenFor(model => model.FundDescription)
                    @Html.HiddenFor(model => model.FundSource)
                    @Html.DisplayNameFor(model => model.FundSource)
                    <b class="d-block text-primary">@Html.DisplayFor(model => model.FundDescription)</b>
                </p>
                <p class="text-sm">
                    @Html.HiddenFor(model => model.ContractLocation)
                    @Html.DisplayNameFor(model => model.ContractLocation)
                    <b class="d-block text-primary">@Html.DisplayFor(model => model.ContractLocation)</b>
                </p>
                <p class="text-sm">
                    @Html.HiddenFor(model => model.ProjectCoordinator)
                    @Html.DisplayNameFor(model => model.ProjectCoordinator)
                    <b class="d-block text-primary">@Html.DisplayFor(model => model.ProjectCoordinator)</b>
                </p>
                <p class="text-sm">
                    @Html.HiddenFor(model => model.DeliveryPeriod)
                    @Html.DisplayNameFor(model => model.DeliveryPeriod)
                    <b class="d-block text-primary">@Html.DisplayFor(model => model.DeliveryPeriod) Calendar Days</b>
                </p>
            </div>
        </div>
    </div>
}

@section FormFooter{
    <div class="row">
        <div class="col-sm-12 text-right">
            <div class="form-group">
                <button type="button" class="btn btn-primary" onclick="SaveBid()"><i class="fa fa-save"></i>&nbsp; Save Bid</button>
                <button type="button" class="btn btn-danger" onclick="window.location = '@Url.Action("dashboard", "BidsRegistration", new { Area = "procurement" })'"><i class="fa fa-arrow-alt-circle-left"></i>&nbsp; Back to Dashboard</button>
            </div>
        </div>
    </div>
}

<script type="text/javascript">
    $(document).ready(function () {
        $('table.display').DataTable({
            "paging": true,
            "lengthChange": true,
            "searching": true,
            "ordering": false,
            "info": true,
            "autoWidth": false,
        });
    });

    $(function () {
        $('#SubmittedAt1').datetimepicker({
            useCurrent: true,
            defaultDate: '@DateTime.Now.ToString("dd MMMM yyyy hh:mm tt")',
            format: 'DD MMMM YYYY hh:mm A'
        });
    });

    function SaveBid() {
        swal.fire({
            title: "Save Bid?",
            text: "You are about to save a bid for this contract, continue?",
            icon: "question",
            showCancelButton: true,
        }).then((result) => {
            if (result.value) {
                $("#projectDetails").submit();
            }
            else {
                swal.fire({
                    title: "Cancelled!",
                    text: "You have cancelled saving the record.",
                    icon: "error"
                })
            };
        })
    }
    function CreateResult(data) {
        if (data.result == true) {
            swal.fire({
                title: "Contract Updated!",
                text: "Contract is successfully updated.",
                icon: "success"
            }).then((result) => {
                if (result.value) {
                    var url = '@Url.Action("list", "MyCPBProjects", new { Area = "procurement" })';
                    window.location.href = url;
                }
            })
        }
        else {
            swal.fire({
                title: "Record Not Saved!",
                text: "Saving record failed.",
                icon: "error"
            });
        }
        var vsummary = $("#ValidationSummary");
        if (vsummary.val() != null) {
            $("input").blur();
            $(window).scrollTop(0,0);
        }
    }
</script>