@model PUPFMIS.Models.PPMPDeadlines
<link href="~/Scripts/adminlte/components/bootstrap-datepicker/dist/css/bootstrap-datepicker.min.css" rel="stylesheet" />

<div class="modal-header">
    <h4 class="modal-title">Set New PPMP Schedule</h4>
    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
        <span aria-hidden="true">&times;</span>
    </button>
</div>

@using (Ajax.BeginForm("create", "PPMPDeadlines", new AjaxOptions() { HttpMethod = "POST", UpdateTargetId = "modal-container", OnSuccess = "CloseModal" }, htmlAttributes: new { id = "addUnit" }))
{
    <div class="modal-body" id="form-body">
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.FiscalYear, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.FiscalYear, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off", @placehoder = Html.DisplayFor(d => d.FiscalYear) } })
                @Html.ValidationMessageFor(model => model.FiscalYear, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label" })
                <div class="input-group date" id="StartDate" data-target-input="nearest">
                    <div class="input-group-prepend" data-target="#StartDate" data-toggle="datetimepicker">
                        <div class="input-group-text"><i class="fa fa-calendar"></i></div>
                    </div>
                    @Html.EditorFor(model => Model.StartDate, new { htmlAttributes = new { @class = "form-control form-control-sm datetimepicker-input", data_target = "#StartDate", style = "font-size: 100%", placeholder = Html.DisplayNameFor(model => Model.StartDate), Value = string.Empty } })
                </div>
                @Html.ValidationMessageFor(model => Model.StartDate, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ClosingDate, htmlAttributes: new { @class = "control-label" })
                <div class="input-group date" id="ClosingDate" data-target-input="nearest">
                    <div class="input-group-prepend" data-target="#ClosingDate" data-toggle="datetimepicker">
                        <div class="input-group-text"><i class="fa fa-calendar"></i></div>
                    </div>
                    @Html.EditorFor(model => Model.ClosingDate, new { htmlAttributes = new { @class = "form-control form-control-sm datetimepicker-input", data_target = "#ClosingDate", style = "font-size: 100%", placeholder = Html.DisplayNameFor(model => Model.ClosingDate), Value = string.Empty } })
                </div>
                @Html.ValidationMessageFor(model => Model.ClosingDate, "", new { @class = "text-danger" })
            </div>

        </div>
    </div>
}

<div class="modal-footer">
    <div class="form-group">
        <button type="button" class="btn btn-primary" id="save-btn"><i class="fa fa-save"></i>&nbsp; Save changes</button>
        <button type="button" class="btn btn-danger" data-dismiss="modal"><i class="fa fa-times-circle"></i>&nbsp; Close</button>
    </div>
</div>


@*<script src="~/Scripts/adminlte/components/bootstrap-datepicker/dist/js/bootstrap-datepicker.min.js"></script>*@
<script type="text/javascript">
    $(function () {
        $('#StartDate').datetimepicker({
            useCurrent: true,
            defaultDate: '@DateTime.Now.ToString("dd MMMM yyyy hh:mm tt")',
            format: 'DD MMMM YYYY hh:mm A'
        });
    });

    $(function () {
        $('#ClosingDate').datetimepicker({
            useCurrent: true,
            defaultDate: '@DateTime.Now.ToString("dd MMMM yyyy hh:mm tt")',
            format: 'DD MMMM YYYY hh:mm A'
        });
    });

    $("#save-btn").on('click', function (e) {
        e.preventDefault();
        swal.fire({
            title: "Save record?",
            text: "You are about to save this record, continue?",
            icon: "question",
            showCancelButton: true,
        }).then((result) => {
            if (result.value) {
                $("#addUnit").submit();
            }
        })
    });
    function CloseModal(data) {
        if (data.status === "success") {
            $('#modal-default').modal('hide');
            toastr.success('New deadline is set!', 'Save', { timeOut: 10000, preventDuplicates: false });
            window.location.href = "@Url.Action("index", "PPMPDeadlines")";
        }
    };
</script>