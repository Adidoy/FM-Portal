@model PUPFMIS.Models.SupplierVM

@Html.AntiForgeryToken()
@Html.ValidationSummary(true, "", new { @class = "text-danger" })
<div class="row">
    <div class="col-lg-6 col-md-6 col-sm-12">
        <div class="form-group">
            @Html.LabelFor(model => model.SupplierName, htmlAttributes: new { @class = "control-label" })
            <div class="input-group mb-3">
                <div class="input-group-prepend">
                    <span class="input-group-text"><i class="fa fa-id-card"></i></span>
                </div>
                @Html.EditorFor(model => model.SupplierName, new { htmlAttributes = new { @class = "form-control form-control-sm", style = "font-size:100%; text-transform:uppercase;", autocomplete = "off", placeholder = Html.DisplayNameFor(d => d.SupplierName) } })
            </div>
            @Html.ValidationMessageFor(model => model.SupplierName, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="col-lg-6 col-md-6 col-sm-12">
        <div class="form-group">
            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label" })
            <div class="input-group mb-3">
                <div class="input-group-prepend">
                    <span class="input-group-text"><i class="fa fa-home"></i></span>
                </div>
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control form-control-sm", style = "font-size:100%;", autocomplete = "off", placeholder = Html.DisplayNameFor(d => d.Address) } })
            </div>
            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
        </div>
    </div>
</div>
<div class="row">
    <div class="col-lg-6 col-md-6 col-sm-12">
        <div class="form-group">
            @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label" })
            <div class="input-group mb-3">
                <div class="input-group-prepend">
                    <span class="input-group-text"><i class="fa fa-home"></i></span>
                </div>
                @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control form-control-sm", style = "font-size:100%;", autocomplete = "off", placeholder = Html.DisplayNameFor(d => d.City) } })
            </div>
            @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="col-lg-6 col-md-6 col-sm-12">
        <div class="form-group">
            @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label" })
            <div class="input-group mb-3">
                <div class="input-group-prepend">
                    <span class="input-group-text"><i class="fa fa-home"></i></span>
                </div>
                @Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control form-control-sm", style = "font-size:100%;", autocomplete = "off", placeholder = Html.DisplayNameFor(d => d.State) } })
            </div>
            @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
        </div>
    </div>
</div>
<div class="row">
    <div class="col-lg-6 col-md-6 col-sm-12">
        <div class="form-group">
            @Html.LabelFor(model => model.PostalCode, htmlAttributes: new { @class = "control-label" })
            <div class="input-group mb-3">
                <div class="input-group-prepend">
                    <span class="input-group-text"><i class="fa fa-home"></i></span>
                </div>
                @Html.EditorFor(model => model.PostalCode, new { htmlAttributes = new { @class = "form-control form-control-sm", style = "font-size:100%;", autocomplete = "off", placeholder = Html.DisplayNameFor(d => d.PostalCode) } })
            </div>
            @Html.ValidationMessageFor(model => model.PostalCode, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="col-lg-6 col-md-6 col-sm-12">
        <div class="form-group">
            @Html.LabelFor(model => model.ContactNumber, htmlAttributes: new { @class = "control-label" })
            <div class="input-group mb-3">
                <div class="input-group-prepend">
                    <span class="input-group-text"><i class="fa fa-phone"></i></span>
                </div>
                @Html.EditorFor(model => model.ContactNumber, new { htmlAttributes = new { @class = "form-control form-control-sm", style = "font-size:100%; text-transform:uppercase;", autocomplete = "off", placeholder = Html.DisplayNameFor(d => d.ContactNumber) } })
            </div>
            @Html.ValidationMessageFor(model => model.ContactNumber, "", new { @class = "text-danger" })
        </div>
    </div>
</div>
<div class="row">
    <div class="col-lg-6 col-md-6 col-sm-12">
        <div class="form-group">
            @Html.LabelFor(model => model.AlternateContactNumber, htmlAttributes: new { @class = "control-label" })
            <div class="input-group mb-3">
                <div class="input-group-prepend">
                    <span class="input-group-text"><i class="fa fa-phone-square"></i></span>
                </div>
                @Html.EditorFor(model => model.AlternateContactNumber, new { htmlAttributes = new { @class = "form-control form-control-sm", style = "font-size:100%; text-transform:uppercase;", autocomplete = "off", placeholder = Html.DisplayNameFor(d => d.AlternateContactNumber) } })
            </div>
            @Html.ValidationMessageFor(model => model.AlternateContactNumber, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="col-lg-6 col-md-6 col-sm-12">
        <div class="form-group">
            @Html.LabelFor(model => model.EmailAddress, htmlAttributes: new { @class = "control-label" })
            <div class="input-group mb-3">
                <div class="input-group-prepend">
                    <span class="input-group-text"><i class="fa fa-envelope"></i></span>
                </div>
                @Html.EditorFor(model => model.EmailAddress, new { htmlAttributes = new { @class = "form-control form-control-sm", style = "font-size:100%;", autocomplete = "off", placeholder = Html.DisplayNameFor(d => d.EmailAddress) } })
            </div>
            @Html.ValidationMessageFor(model => model.EmailAddress, "", new { @class = "text-danger" })
        </div>
    </div>
</div>
<div class="row">
    <div class="col-lg-6 col-md-6 col-sm-12">
        <div class="form-group">
            @Html.LabelFor(model => model.ContactPerson, htmlAttributes: new { @class = "control-label" })
            <div class="input-group mb-3">
                <div class="input-group-prepend">
                    <span class="input-group-text"><i class="fa fa-user"></i></span>
                </div>
                @Html.EditorFor(model => model.ContactPerson, new { htmlAttributes = new { @class = "form-control form-control-sm", style = "font-size:100%;", autocomplete = "off", placeholder = Html.DisplayNameFor(d => d.ContactPerson) } })
            </div>
            @Html.ValidationMessageFor(model => model.ContactPerson, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="col-lg-6 col-md-6 col-sm-12">
        <div class="form-group">
            @Html.LabelFor(model => model.ContactPersonDesignation, htmlAttributes: new { @class = "control-label" })
            <div class="input-group mb-3">
                <div class="input-group-prepend">
                    <span class="input-group-text"><i class="fa fa-user"></i></span>
                </div>
                @Html.EditorFor(model => model.ContactPersonDesignation, new { htmlAttributes = new { @class = "form-control form-control-sm", style = "font-size:100%;", autocomplete = "off", placeholder = Html.DisplayNameFor(d => d.ContactPersonDesignation) } })
            </div>
            @Html.ValidationMessageFor(model => model.ContactPersonDesignation, "", new { @class = "text-danger" })
        </div>
    </div>
</div>
<div class="row">
    <div class="col-lg-6 col-md-6 col-sm-12">
        <div class="form-group">
            @Html.LabelFor(model => model.AuthorizedAgent, htmlAttributes: new { @class = "control-label" })
            <div class="input-group mb-3">
                <div class="input-group-prepend">
                    <span class="input-group-text"><i class="fa fa-user"></i></span>
                </div>
                @Html.EditorFor(model => model.AuthorizedAgent, new { htmlAttributes = new { @class = "form-control form-control-sm", style = "font-size:100%;", autocomplete = "off", placeholder = Html.DisplayNameFor(d => d.AuthorizedAgent) } })
            </div>
            @Html.ValidationMessageFor(model => model.AuthorizedAgent, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="col-lg-6 col-md-6 col-sm-12">
        <div class="form-group">
            @Html.LabelFor(model => model.AuthorizedDesignation, htmlAttributes: new { @class = "control-label" })
            <div class="input-group mb-3">
                <div class="input-group-prepend">
                    <span class="input-group-text"><i class="fa fa-user"></i></span>
                </div>
                @Html.EditorFor(model => model.AuthorizedDesignation, new { htmlAttributes = new { @class = "form-control form-control-sm", style = "font-size:100%;", autocomplete = "off", placeholder = Html.DisplayNameFor(d => d.AuthorizedDesignation) } })
            </div>
            @Html.ValidationMessageFor(model => model.AuthorizedDesignation, "", new { @class = "text-danger" })
        </div>
    </div>
</div>
<div class="row">
    <div class="col-lg-6 col-md-6 col-sm-12">
        <div class="form-group">
            @Html.LabelFor(model => model.TaxIdNumber, htmlAttributes: new { @class = "control-label" })
            <div class="input-group mb-3">
                <div class="input-group-prepend">
                    <span class="input-group-text"><i class="fa fa-file"></i></span>
                </div>
                @Html.EditorFor(model => model.TaxIdNumber, new { htmlAttributes = new { @class = "form-control form-control-sm", style = "font-size:100%; text-transform:uppercase;", autocomplete = "off", placeholder = Html.DisplayNameFor(d => d.TaxIdNumber) } })
            </div>
            @Html.ValidationMessageFor(model => model.TaxIdNumber, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="col-lg-6 col-md-6 col-sm-12">
        <div class="form-group">
            @Html.LabelFor(model => model.Website, htmlAttributes: new { @class = "control-label" })
            <div class="input-group mb-3">
                <div class="input-group-prepend">
                    <span class="input-group-text"><i class="fa fa-code"></i></span>
                </div>
                @Html.EditorFor(model => model.Website, new { htmlAttributes = new { @class = "form-control form-control-sm", style = "font-size:100%;", autocomplete = "off", placeholder = Html.DisplayNameFor(d => d.Website) } })
            </div>
            @Html.ValidationMessageFor(model => model.Website, "", new { @class = "text-danger" })
        </div>
    </div>
</div>
<hr />
<div class="row">
    <div class="col-lg-6 col-md-6 col-sm-12">
        <div class="row">
            <div class="col-sm-12">
                <div class="bg-info">
                    <h5 class="p-2">@Html.DisplayNameFor(model => model.CategoryList)</h5>
                </div>
            </div>
        </div>
        <div class="container border border-secondary" style="height:150px; overflow-x:auto; overflow-y:auto">
            @for (int i = 0; i < Model.CategoryList.Count; i++)
            {
                @Html.HiddenFor(d => d.CategoryList[i].ID)
                @Html.HiddenFor(d => d.CategoryList[i].Category)
                <div class="checkbox">
                    @Html.CheckBoxFor(d => d.CategoryList[i].IsSelected)
                    @Html.LabelFor(d => d.CategoryList[i].IsSelected, Model.CategoryList[i].Category, new { @class = "control-label" })
                </div>
            }
        </div>
    </div>
    <div class="col-lg-6 col-md-6 col-sm-12">
        <div class="row">
            <div class="col-sm-12">
                <div class="bg-info">
                    <h5 class="p-2">@Html.DisplayNameFor(model => model.ItemTypesList)</h5>
                </div>
            </div>
        </div>
        <div class="container overflow-auto border border-secondary" style="height:150px;">
            @for (int i = 0; i < Model.ItemTypesList.Count; i++)
            {
                @Html.HiddenFor(d => d.ItemTypesList[i].ID)
                @Html.HiddenFor(d => d.ItemTypesList[i].ItemType)
                <div class="checkbox">
                    @Html.CheckBoxFor(d => d.ItemTypesList[i].IsSelected)
                    @Html.LabelFor(d => d.ItemTypesList[i].IsSelected, Model.ItemTypesList[i].ItemType, new { @class = "control-label" })
                </div>
            }
        </div>
    </div>
</div>