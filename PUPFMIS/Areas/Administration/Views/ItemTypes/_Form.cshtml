@model PUPFMIS.Models.ItemTypes


@Html.AntiForgeryToken()
<div class="row">
    <div class="col-sm-12">
        <div class="card card-primary card-outline">
            <div class="card-header"><h3 class="card-title text-primary" style="font-weight:bold;">Item Type Details</h3></div>
            <div class="card-body">
                <div class="row">
                    <div class="col-lg-1 col-md-1 col-sm-12"></div>
                    <div class="col-lg-10 col-md-10 col-sm-12">
                        <div class="form-horizontal">
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            @if (ViewBag.Description == "Edit Record")
                            {
                                @Html.HiddenFor(model => model.ID)
                            }
                            <div class="row">
                                <div class="col-sm-12">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.ItemTypeCode, htmlAttributes: new { @class = "control-label" })
                                        <div class="input-group mb-3">
                                            <div class="input-group-prepend">
                                                <span class="input-group-text"><i class="fa fa-id-badge"></i></span>
                                            </div>
                                            @Html.EditorFor(model => model.ItemTypeCode, new { htmlAttributes = new { @class = "form-control form-control-sm", style = "font-size:100%; text-transform:uppercase;", autocomplete = "off", placeholder = Html.DisplayNameFor(d => d.ItemTypeCode) } })
                                        </div>
                                        @Html.ValidationMessageFor(model => model.ItemTypeCode, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.ItemType, htmlAttributes: new { @class = "control-label" })
                                        <div class="input-group mb-3">
                                            <div class="input-group-prepend">
                                                <span class="input-group-text"><i class="fa fa-id-card"></i></span>
                                            </div>
                                            @Html.EditorFor(model => model.ItemType, new { htmlAttributes = new { @class = "form-control form-control-sm", style = "font-size:100%; text-transform:uppercase;", autocomplete = "off", placeholder = Html.DisplayNameFor(d => d.ItemType) } })
                                        </div>
                                        @Html.ValidationMessageFor(model => model.ItemType, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.FKItemClassificationReference.Classification, htmlAttributes: new { @class = "control-label" })
                                        <div class="input-group mb-3">
                                            <div class="input-group-prepend">
                                                <span class="input-group-text"><i class="fa fa-bookmark"></i></span>
                                            </div>
                                            @Html.DropDownList("ItemClassificationReference", null, htmlAttributes: new { @class = "form-control form-control-sm select2", style = "font-size:100%;" })
                                        </div>
                                        @Html.ValidationMessageFor(model => model.ItemClassificationReference, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.ResponsibilityCenter, htmlAttributes: new { @class = "control-label" })
                                        <div class="input-group mb-3">
                                            <div class="input-group-prepend">
                                                <span class="input-group-text"><i class="fa fa-building"></i></span>
                                            </div>
                                            @Html.DropDownList("ResponsibilityCenter", null, htmlAttributes: new { @class = "form-control form-control-sm select2", style = "font-size:100%;" })
                                        </div>
                                        @Html.ValidationMessageFor(model => model.ResponsibilityCenter, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.PurchaseRequestCenter, htmlAttributes: new { @class = "control-label" })
                                        <div class="input-group mb-3">
                                            <div class="input-group-prepend">
                                                <span class="input-group-text"><i class="fa fa-building"></i></span>
                                            </div>
                                            @Html.DropDownList("PurchaseRequestCenter", null, htmlAttributes: new { @class = "form-control form-control-sm select2", style = "font-size:100%;" })
                                        </div>
                                        @Html.ValidationMessageFor(model => model.PurchaseRequestCenter, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-1 col-md-1 col-sm-12"></div>
                </div>
            </div>
        </div>
    </div>
</div>